@model SupperClub.Domain.Event
@{
    ViewBag.Title = Model.Name + " | Eat Out with Grub Club";
    ViewBag.Description = Model.EventDescription == null ? "" : (Model.EventDescription.Length > 120 ? Model.EventDescription.Substring(0, 120) : Model.EventDescription);
}
@section PageSpecificScripts {
    <!-- Meta Properties used for Sharing with OG -->
    <meta property="og:title" content="@Model.Name"/>   
    <meta property="og:type" content="website"/>
    <meta property="og:url" content="@Request.Url.AbsoluteUri"/>
    <meta property="og:image" content="@(Request.Url.GetLeftPart(System.UriPartial.Authority) + Url.Content(SupperClub.Code.ServerMethods.EventImagePath + Model.ImagePath))"/>     
    <meta property="og:description" content="@Model.NonHtmlDescription"/>
    <meta property="og:site_name" content="GrubClub"/>     
    <meta property="og:email" content="eat@grubclub.com"/>
    
    <link rel="stylesheet" type="text/css"  href="@Url.Content("~/Content/css/datepicker/jquery-ui-1.8.23.custom.css")" />
    <link rel="stylesheet" type="text/css"  href="@Url.Content("~/Content/css/timepicker/jquery.ui.timepicker.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/jquery-ui-1.10.3.min.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/jquery.bxslider.css")">
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/multi-select.css")">
    <link rel='stylesheet' type="text/css" href="@Url.Content("~/Content/css/mprogress.min.css")">    

    @* http://fgelinas.com/code/timepicker/ *@
    <script src="@Url.Content("~/Scripts/old/jquery.ui.timepicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/old/jquery.validate.min.js")" type="text/javascript"></script> j
<script src="@Url.Content("~/Scripts/old/jquery.validate.date.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/old/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @*This script handles additional custom date validation on dd/MM/yy*@
    <script src="@Url.Content("~/Scripts/old/jquery.validate.custom.js")" type="text/javascript"></script>
    @*http://code.google.com/p/jquery-formatcurrency/*@
    <script src="@Url.Content("~/Scripts/jquery.formatCurrency-1.4.0.min.js")" type="text/javascript"></script>
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>
    <script src="@Url.Content("~/Scripts/jquery.numeric.js")" type="text/javascript"></script> 
    <script src="@Url.Content("~/Scripts/jquery.bxslider.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.multi-select.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.quicksearch.js")" type="text/javascript"></script>  
    <script src="@Url.Content("~/Scripts/mprogress.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/feather.js")" type="text/javascript"></script>             
    <script src="@Url.Content("~/Scripts/old/ww.jquery.min.js")" type="text/javascript"></script>   
    <script src="@Url.Content("~/scripts/textcounter.min.js")" type="text/javascript"></script>

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/bootstrap.min.css")" />
<script src="@Url.Content("~/Scripts/home/bootstrap.min.js")" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/newstyle.css")" />
    <style>
        .modal {
            z-index: 10000;
        }
        #Uploader_filelist
        {
            height: 140px;
        }      
        #map-canvas img {
            max-width: inherit;
        }
     .rslides img.displayed {
    display: block;
    margin-left: auto;
    margin-right: auto 

     }
     .label-warning {
         padding: 5px;
         margin-top: -10px;
         color: #fff;
         background-color: #ff7400 !important;
         border-radius: 10px;
     }
     iframe {
        height: 100%;
        width: 100%;
        display:block;
        overflow-x: hidden;
     }
    </style>
    <script type="text/javascript">
    function initialize()
    {
        @Html.Raw(string.Format("var mapCenter = new google.maps.LatLng({0}, {1});", Model.Latitude.ToString("F3"), Model.Longitude.ToString("F3")))

        var mapOptions = {
            zoom: 13,
            maxZoom: 15,
            scrollwheel: true,
            zoomControl: true,
            streetViewControl: false,
            disableDefaultUI: false,
            panControl:true,
            center: mapCenter,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        google.maps.event.addDomListener(window, 'load', initialize);
        var marker = new google.maps.Marker({
            map: map,
            @Html.Raw(string.Format("position : new google.maps.LatLng({0}, {1}),", Model.Latitude.ToString("F3"), Model.Longitude.ToString("F3")))
            title: ''
        });
        var circle = new google.maps.Circle({
            map: map,
            @Html.Raw(string.Format("radius: {0},", SupperClub.Code.ServerMethods.GoogleMapsCircleRadius))    // metres
            strokeWeight:1,
            strokeColor:'#AA0000',
            clickable: false,
            editable: false,
            fillColor: '#AA0000',
            fillOpacity: 0.2,
            strokeOpacity:0.1
        });
        circle.bindTo('center', marker, 'position');
        marker.setVisible(true);
    };

    Date.prototype.addHours = function(h) {
        this.setTime(this.getTime() + (h*60*60*1000));
        return this;
    }

    /* jQuery Validation with Tabs*/

    //Make sure the validator works for hidden fields
    $.validator.setDefaults({ ignore: '' });
    var featherEditor = new Aviary.Feather({
        apiKey: '@System.Web.Configuration.WebConfigurationManager.AppSettings["AviaryApiKey"]',
        onSave: function(imageID, newURL) {
            debugger;
            if (imageID.substring(0, 1) === "t") {
                debugger;
                $.post('/event/saveUpdatedImage', { url: newURL, imageId: imageID })
                $("#editedId").val(imageID);
                $("#editedOldId").val(imageID);
            }
            else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("saveUpdatedImageEdit", "Event")',
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify({ url: newURL, imageId: imageID }),
                    success: function (data) {
                        debugger;
                        if (data.error == null) {
                            $("#editedId").val(data.folderPathIdentifier + "_" + data.newImageId);
                            $("#editedOldId").val(data.oldImageId);
                            var _currentImagePaths = $("#ImagePaths").val();
                            $("#ImagePaths").val(_currentImagePaths.replace(data.oldImageId, data.newImageId));
                        }
                        else {
                            alert("error:" + data.error);
                        }
                    },
                    error: function (data) {
                        alert("error:" + data.error);
                    }
                });
            }
        },
        onClose: function (isDirty)
        {
            if (isDirty) {
                $("#editedId").val("");
                $("#editedOldId").val("");
            }
            else {
                debugger;
                var latestEditedImageIdNew = $("#editedId").val();
                var latestEditedImageId = $("#editedOldId").val();
                if (latestEditedImageIdNew && latestEditedImageIdNew.length > 0) {
                    var res = latestEditedImageIdNew.split("_");
                    if (res.length > 1) {
                        var folderPathIdentifier = res[0];
                        var fileName = res[1];
                        if (latestEditedImageId == latestEditedImageIdNew)
                            latestEditedImageId = fileName;
                        var folderPath = "";
                        switch (folderPathIdentifier) {
                            case "t":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.TempImagePathPartial";
                                break;
                            case "e":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.EventImagePathPartial";
                                break;
                            case "s":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.SupperClubImagePathPartial";
                                break;
                        }
                        if (folderPath.length > 0) {
                            if (folderPathIdentifier == "t") {
                                localFileDest = folderPath + fileName;
                                var img = document.getElementById('dis_' + latestEditedImageId);
                                img.src = localFileDest + "?" + +new Date().getTime();
                                img.id = "dis_" + fileName;
                            }
                            else {
                                localFileDest = folderPath + fileName;
                                var newImageFullUrl = localFileDest;
                                var newRow = "<tr class='rowImgDetails' id='row_" + fileName.substring(0, 36) + "'>";
                                var cols = "";
                                var _imgId = fileName;
                                cols += '<td style="display:none;" class="ImgId">' + _imgId + '</td>';
                                cols += '<td style="display:none;"><img src="' + newImageFullUrl + '" id="' + latestEditedImageIdNew + '" /></td>';
                                cols += '<td style="padding:20px;"><img src="' + newImageFullUrl + '" alt="@Model.Name" style="width:240px;" id="dis_' + _imgId + '" /></td>';
                                cols += '<td><a class="btnEditImage" onclick="return launchEditor(\'' + latestEditedImageIdNew + '\',\'' + newImageFullUrl + '\');">Edit your picture</a></td>';
                                cols += '<td><a class="btnDeleteImage" href="#">Delete</a></td></tr>';
                                newRow = newRow + cols;
                                $("#row_" + latestEditedImageId.substring(0, 36)).after(newRow);
                                $("#row_" + latestEditedImageId.substring(0, 36)).remove();
                            }
                        }
                    }
                }
                $("#editedId").val("");
                $("#editedOldId").val("");
            }
        },
        onError: function(errorObj) {
            alert(errorObj.message);
        }
    });

    function launchEditor(id, src) {
        debugger;
        featherEditor.launch({
            image: id,
            url: src,
            cropPresets :[
                'Custom',
                'Original',
                ['Square', '1:1'],
                '3:2', '5:3', '4:3', '5:4', '6:4', '7:5', '10:8', '16:9'
            ],
            cropPresetsStrict: true,
            forceCropPreset: ['', '6:4'],
            forceCropMessage: 'Images need to be 6:4'
        });
        return false;
    }


    //Move to a tab with any invalid fields
    $(document).ready(function () {


        $(".editor").hide();
        $("#btnUpdate").hide();
        $("#btnCancel").hide();
        $("#btnCancelEvent").show();
        $("#btnUpload").hide();
        $(".imageEdit").hide();
        $(".imageDisplay").show();
        $("#dialog-form").hide();
        $("#dialog-form-menu").hide();
        $("#edit-seating").hide();
        $("#edit-seating-host").hide();
        $("#edit-menu").hide();

        $('#txtOtherAllergy').val("@Model.OtherAllergyText");

        $("#Cuisines").prop("readonly", true);
        $('#ClearCuisine').click(function() {
            $("#Cuisines").val("");
        });

        $("#btnEdit").click(function () {
            $(".editor").show();
            $("#btnUpdate").show();
            $("#btnCancel").show();
            $("#btnCancelEvent").show();
            $("#btnUpload").show();
            $(".display").hide();
            $("#btnEdit").hide();
            $(".imageEdit").show();
            $(".imageDisplay").hide();
        });

        $("#btnCancel").click(function () {
            $(".editor").hide();
            $("#btnUpdate").hide();
            $("#btnCancel").hide();
            $("#btnCancelEvent").hide();
            $("#btnUpload").hide();
            $(".display").show();
            $("#btnEdit").show();
            $(".imageEdit").hide();
            $(".imageDisplay").show();
        });
        $('.counter').textcounter({            
                type: "word",
                stopInputAtMaximum: true,
                countDown: true,
                countDownText: "Words Remaining: %d",
                max: @ViewBag.DescriptionArrayLength == 1 ? 1001 : 51,
                min:5
        });       

        $('.counter1').textcounter({            
            type: "word",
            stopInputAtMaximum: true,
            countDown: true,
            countDownText: "Words Remaining: %d",
            max: 51,
            min:5
        });

        $('.counter2').textcounter({            
            type: "word",
            stopInputAtMaximum: true,
            countDown: true,
            countDownText: "Words Remaining: %d",
            max: 51,
            min:5
        });

        $('.counter3').textcounter({            
            type: "word",
            stopInputAtMaximum: true,
            countDown: true,
            countDownText: "Words Remaining: %d",
            max: 51,
            min:5
        });
        $.datepicker.setDefaults($.datepicker.regional['en-GB']);
        $.datepicker.setDefaults({ dateFormat: 'dd/mm/yy' });

        @if (Model.EventImages.Count == 0)
        {
            <text>
        $("#divImgEdit").hide();
        </text>
        }
        $("#divCreateTag").hide();
        $('.searchable').multiSelect({
            selectableHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Search...'>",
            selectionHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Search...'>",
            afterInit: function(ms){
                var that = this,
                    $selectableSearch = that.$selectableUl.prev(),
                    $selectionSearch = that.$selectionUl.prev(),
                    selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
                    selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                .on('keydown', function(e){
                    if (e.which === 40){
                        that.$selectableUl.focus();
                        return false;
                    }
                });

                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                .on('keydown', function(e){
                    if (e.which == 40){
                        that.$selectionUl.focus();
                        return false;
                    }
                });
            },
            afterSelect: function(){
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function(){
                this.qs1.cache();
                this.qs2.cache();
            }
        });


        $("#tabnav7").click(function(){
            if ($("#tabnav7").is(':visible'))
            {
                initialize();
            }
        });

        $("#lblStatus").text("");
        $("#lblStatus").hide();
        $("#dialog").hide();



        $("#btnAddWaitListNew").click(function () {
            var emailId = $("#txtAddWaitlistEmail").val();
            var eventId = @Model.Id;
            if(!IsEmail(emailId))
            {
                $("input.txtAddWaitlistEmail").focus();
                $("#lblStatus").text("E-mail address entered is not valid. Please check and enter a valid e-mail address!");
                $("#lblStatus").css("color", 'red');
                $("#lblStatus").show();
            }
            else
            {
                if(eventId != null || eventId == 0)
                {
                    $.getJSON('@Url.Action("AddToWaitList", "Search")', { eventId: eventId, email: emailId, source: "Event" }, function (actionStatus) {
                        $("#lblStatus").text(actionStatus.NotificationMessage);
                        if(actionStatus.Success)
                            $("#lblStatus").css("color", 'green');
                        else
                            $("#lblStatus").css("color", 'red');
                        $("#lblStatus").show();
                    });
                }
                else
                {
                    $("#lblStatus").text("There was a problem adding to waiting list, please try again or contact an Administrator.");
                    $("#lblStatus").css("color", 'red');
                    $("#lblStatus").show();
                }
            }
        });

        $("#btnClose").click(function () {
            $( "#dialog" ).dialog("close");
        });

        debugger;
        // Format while typing, 2 decimal places
        
        
        //Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(number)($("#CostTextDisplay")).toString());
        $("#CostTextDisplay").formatCurrency({ symbol:'£'});
        $('#CostTextDisplay').blur(function() {
            $(this).formatCurrency({ symbol:'£'});
            
        })
        .keyup(function(e) {
            var e = window.event || e;
            var keyUnicode = e.charCode || e.keyCode;
            if (e !== undefined) {
                switch (keyUnicode) {
                    case 16: break; // Shift
                    case 17: break; // Ctrl
                    case 18: break; // Alt
                    case 27: this.value = ''; break; // Esc: clear entry
                    case 35: break; // End
                    case 36: break; // Home
                    case 37: break; // cursor left
                    case 38: break; // cursor up
                    case 39: break; // cursor right
                    case 40: break; // cursor down
                    case 78: break; // N (Opera 9.63+ maps the "." from the number key section to the "N" key too!) (See: http://unixpapa.com/js/key.html search for ". Del")
                    case 110: break; // . number block (Opera 9.63+ maps the "." from the number block to the "N" key (78) !!!)
                    case 190: break; // .
                    default: $(this).formatCurrency({ symbol:'£', roundToDecimalPlace: -1});
                }
            }
        });
        var basePrice = document.getElementById("CostTextDisplay");
        //  var totalPrice = document.getElementById("CostToGuest");
        var commission=document.getElementById("Commission");
        var value1=basePrice.value.replace("£","");
        //   totalPrice.value = parseFloat(value1)+(value1 * (commission.value/100));
        var val=parseFloat(value1)+(value1 * (commission.value/100))
        $('#lblGuest').text(Math.round(val*100)/100);
        $('#lblGuestEdit').text(Math.round(val*100)/100);

        $('#CostTextDisplay').change(function ()
        {
            debugger;
            var basePrice = document.getElementById("CostTextDisplay");
            var value1=basePrice.value.replace("£","");
            //  var totalPrice = document.getElementById("CostToGuest");
            var commission=document.getElementById("Commission");
    //        basePrice.value=basePrice.value.replace("£","");
            // totalPrice.value = parseFloat(basePrice.value)+(basePrice.value * (commission.value/100));
            var val=parseFloat(value1)+(value1 * (commission.value/100));
            $('#lblGuestEdit').text(Math.round(val*100)/100);
        });


        $("#menuCost").change(function ()
        {
            var cost= $("#menuCost").val();
            var comm=getCommissionValue();
            var guestprice=$("#menuGuestPrice");
            var val=parseFloat(cost)+parseFloat(cost*(comm/100));
            guestprice.text(Math.round(val*100)/100);

         });

        $("#CuisinesDL").change(function () {
            var cuisineText = $("#Cuisines").val();
            var selectedCuisine = $("#CuisinesDL option:selected").text();
            if(cuisineText.length > 0 && cuisineText[cuisineText.length-1] != "," && cuisineText.indexOf(selectedCuisine) == -1)
                cuisineText = cuisineText + ", "+ selectedCuisine;
            else if(cuisineText.length == 0)
                cuisineText = selectedCuisine;
            $("#Cuisines").val(cuisineText);
        });

        $('.positive-edit-menu').change(function()
        {
       
            $('tr.editMenuRow').each(function() {
                $this = $(this);
                
                var menuCost = $this.find("input.positive-edit-menu").val();
                var comm=getCommissionValue();
                var GuestCost = $this.find(".GuestPrice");

                var val=parseFloat(menuCost)+parseFloat(menuCost*(comm/100));
                     GuestCost.text(Math.round(val*100)/100);
             });
        
        });

        $("#Commission").change(function() {
            var comm = $("#Commission").val();
            comm=comm.replace(".00","");
            $("#lblCommission").html(comm);
            $('.CommissionText').each(function()
            {
                $(this).text(comm);
            });

            var basePrice = document.getElementById("CostTextDisplay");
            //  var totalPrice = document.getElementById("CostToGuest");
            var commission=document.getElementById("Commission");
            basePrice.value=basePrice.value.replace("£","");
            // totalPrice.value = parseFloat(basePrice.value)+(basePrice.value * (commission.value/100));
            var val=parseFloat(basePrice.value)+(basePrice.value * (commission.value/100));
            $('#lblGuestEdit').text(Math.round(val*100)/100);

            $('tr.editMenuRow').each(function() {
                $this = $(this);
                
                var menuCost = $this.find("input.positive-edit-menu").val();
                var comm=getCommissionValue();
                var GuestCost = $this.find(".GuestPrice");
                var val=parseFloat(menuCost)+parseFloat(menuCost*(comm/100));
                GuestCost.text(Math.round(val*100)/100);
                
            });

            var cost= $("#menuCost").val();
            var comm=getCommissionValue();
            var guestprice=$("#menuGuestPrice");
            var val=parseFloat(cost)+parseFloat(cost*(comm/100))
            guestprice.text(Math.round(val*100)/100);
        });

        $("#SupperclubDL").change(function () {
            var supperClubId = $("#SupperClubId").val();
            var selectedSupperclubId = $("#SupperclubDL option:selected").val();
            supperClubId = selectedSupperclubId;
            $("#SupperClubId").val(supperClubId);
        });

        // Delete Images
        $('body').on('click', 'a.btnDeleteImage', function (e){
            debugger;
            var tempScrollTop = $(window).scrollTop();
            var imagePaths = $("#ImagePaths").val();
            var imageToRemove = $(this).closest('tr').children('td.ImgId').text();
            if(imagePaths.length > 0 && imagePaths.indexOf(imageToRemove) != -1)
            {
                imagePaths = imagePaths.replace("," + imageToRemove, "");
                imagePaths = imagePaths.replace(imageToRemove + ",", "");
                imagePaths = imagePaths.replace(imageToRemove, "");
            }
            $("#ImagePaths").val(imagePaths);
            $(this).closest("tr").remove();
            $(window).scrollTop(tempScrollTop);
            e.preventDefault();
            return false;
        });

        //$('.imgResize').css('width','80px');
        //$('.imgResize').css('height','45px');

        var mp3 = new Mprogress({
            template: 3,
            parent: '#demoIn'
        });
        $('#btnImgUpload').click(function(e) {
            e.preventDefault();
            var files = $("#avatar").prop("files");
            var totalRequestSize = 0;
            if (files.length > 0)
            {
                if (window.FormData !== undefined)
                {
                    var form_data = new FormData();
                    for (var x = 0; x < files.length; x++)
                    {
                        form_data.append("file" + x, files[x]);
                        totalRequestSize += files[x].size;
                    }
                    if (totalRequestSize > 1024 * 1024 * 7) {
                        alert("Total file size exceeded 7MB. Please select fewer files and continue.");
                        return false;
                    }
                    else {
                        mp3.start();
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SaveUploadedFile", "Event")',
                            dataType: 'json',
                            data: form_data,
                            processData: false,
                            contentType: false,
                            success: function(data, textStatus, request){
                                debugger;
                                var imageUrl = data.Message;
                                var imagePath = $("#ImagePaths").val();
                                if(imagePath.length > 0)
                                    imagePath = imagePath + ","+ imageUrl;
                                else if(imagePath.length == 0)
                                    imagePath = imageUrl;
                                $("#ImagePaths").val(imagePath);
                                //logic to render thumbnail and edit button
                                var res = imageUrl.split(",");
                                for (var i = 0; i < res.length; i++)
                                {
                                    var imageFullUrl = "@SupperClub.Code.ServerMethods.ServerUrl" + "Content/Images/tempImages/" + res[i];
                                    var newRow = $("<tr>");
                                    var cols = "";
                                    var _imgId = res[i];
                                    cols += '<td style="display:none;"  class="ImgId">'+_imgId+'</td>';
                                    cols += '<td style="display:none;"><img src="' + imageFullUrl + '" id="t_' + _imgId + '" /></td>';
                                    cols += '<td><img src="' + imageFullUrl + '" alt="@Model.Name" style="width:240px;" id="dis_'+ _imgId + '" /></td>';
                                    cols += '<td><a class="btnEditImage" href="#" onclick="return launchEditor(\'t_'+ _imgId +'\',\'' + imageFullUrl + '\');">Edit your picture</a></td>';
                                    cols += '<td><a class="btnDeleteImage" href="#">Delete</a></td></tr>';
                                    newRow.append(cols);
                                    $("#tblImgList").append(newRow);
                                }
                                $('#divImgEdit').show();
                                mp3.end(true);
                            },
                            error: function (request, textStatus, errorThrown) {
                                alert("error:" + errorThrown);
                            }
                        });
                        e.preventDefault();
                    }
                }
                else
                {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });
        // Image Slider
        $(".rslides").bxSlider({
            auto: true,
            autoControls: true,
            adaptiveHeight: true,
            autoHover : true
        });

        // Create tags
        /*$('#CreateTag').on("click", function() {
                $('#divCreateTag').show();
                $('#CreateTag').hide();
        });
        $('#btnCreateTag').click(function () {
            var tagText = $("#txtTagName").val();
            var tagTextSeo = $("#txtTagSeo").val();

            if(tagText == null || tagText.length == 0)
                alert("Please add tag name!");
            else
            {
                if(tagTextSeo == null || tagTextSeo.length == 0)
                    alert("Please add tag SEO name!");
                else
                {
                    $.getJSON('Url.Action("AddNewTag", "Event")', { tagName: tagText, tagSeoName : tagTextSeo }, function (tagId)
                    {
                        if (tagId == 0)
                        {
                            alert("There was a problem adding this tag. Please try again");
                        }
                        else if(tagId == -1)
                        {
                            alert("The tag name already exists! Please enter a different tag name.");
                        }
                        else if(tagId == -2)
                        {
                            alert("The SEO name already exists! Please enter a different SEO name.");
                        }
                        else
                        {
                            // Force change in case of refresh
                            $('.searchable').append("<option value=" + tagId + ">" + tagText + "</option>");
                            $('.searchable').multiSelect('refresh');
                            $("#divCreateTag").hide();
                            $("#CreateTag").show();
                            alert("Tag added successfully.");
                        }
                    });
                }
            }
        });

        $('#btnCreateTagCancel').click(function () {
            $("#divCreateTag").hide();
            $("#CreateTag").show();
        }); */

        $('#searchableTag').on('change', function() {

            var str = "";
            $("#searchableTag option:selected").each(function() {
                str += $(this).val() + ",";
            });

            $("#EventTagList").val(str);
        }).change();

        $('#searchableCity').on('change', function() {

            var str = "";
            $("#searchableCity option:selected").each(function() {
                str += $(this).val() + ",";
            });

            $("#EventCityList").val(str);
        }).change();

        $('#searchableArea').on('change', function() {

            var str = "";
            $("#searchableArea option:selected").each(function() {
                str += $(this).val() + ",";
            });

            $("#EventAreaList").val(str);
        }).change();

        // Set selected seatingTime
        $("input[name='seatingTime']").change(function () {
            var selectedVal = $("input[type='radio'][name='seatingTime']:checked").val();
            if (selectedVal != 10000) {
                var rows = $("table[class='standard-table'][id='tblGuestList'] tr");
                var SelSeat = rows.filter('.Class' + selectedVal).show();
                var SelSeatTotal = rows.filter('.TotalClass' + selectedVal).show();
                rows.not(SelSeat).not(SelSeatTotal).not('thead tr').hide();
            }
            else {
                $("table[class='standard-table'][id='tblGuestList'] tr").show();
                $('table[class="standard-table"][id="tblGuestList"] tr[class^="TotalClass"]').hide();
                $("#grandTotal").show();
            }
        });

        if(@Model.DefaultSeatingId > 0)
        {
            var selectedVal= $("input[type='radio'][name='seatingTime']:checked").val();
            var rows = $("table[class='standard-table'][id='tblGuestList'] tr");
            var SelSeat = rows.filter('.Class'+ selectedVal).show();
            var SelSeatTotal = rows.filter('.TotalClass' + selectedVal).show();
            rows.not(SelSeat).not(SelSeatTotal).not('thead tr').hide();
        }

        var radioChecked = $('#defaultSeating').is(':checked');
        $('#defaultSeating').click(function() {
            radioChecked = !radioChecked;
            $(this).attr('checked', radioChecked);
        });

        var menuRadioChecked = $('#defaultMenu').is(':checked');
        $('#defaultMenu').click(function() {
            menuRadioChecked = !menuRadioChecked;
            $(this).attr('checked', menuRadioChecked);
        });

        $("#btnCreateSeating").click(function() {
            $("#edit-seating").hide();
            $("#edit-seating-host").hide();
            $('.timepickernew').timepicker({ showLeadingZero: true, showPeriodLabels: false});
            $(".positive-integer-only").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });
            $("#dialog-form").show();

        });
        $("#btnCreateMenu").click(function(e) {
            $("#edit-menu").hide();
            $(".positive").numeric({ negative: false }, function() { alert("No negative values"); this.value = ""; this.focus(); });
            $("#dialog-form-menu").show();
            $("#menuTitle").focus();
            e.preventDefault();
        });
        $("#btnCancelCreateSeating").click(function() {
            $("#edit-seating").hide();
            $("#edit-seating-host").hide();
            $("#dialog-form").hide();
            $("#guestsMulti").val("");
            $("#reservedSeatsMulti").val("");
            $("#timepicker_start").val("");
            $('#defaultSeating').attr('checked',false);
            $("#multiListing").show();
            isEdited = false;
        });
        $("#btnCancelCreateMenu").click(function(e) {
            $("#edit-menu").hide();
            $("#dialog-form-menu").hide();
            $("#menuTitle").val("");
            $("#menuDescription").val("");
            $("#menuCost").val("");
            $('#defaultMenu').attr('checked',false);
            $("#multiMenuListing").show();
            isMenuEdited = false;
            e.preventDefault();
        });

        var isEdited = false;
        $("#btnEditSeating").click(function() {
            $("#dialog-form").hide();
            $("#multiListing").hide();
            var full_content = $("#Seatings").val();
            var seatingList = new Array();
            seatingList = full_content.split(",");
            $("#tbl_edit_seating tbody tr").remove();
            if(seatingList.length > 0)
            {
                full_content = "";
                for (var i=0;i<seatingList.length;i++)
                {
                    var seatingParamLiat = new Array();
                    seatingParamLiat = seatingList[i].split("|");
                    var timeHours = seatingParamLiat[0].split(":")[0];
                    var timeMinutes = seatingParamLiat[0].split(":")[1];
                    timeMinutes = timeMinutes < 10 ? "0" + timeMinutes : timeMinutes;

                    $("#tbl_edit_seating tbody").append("<tr class='editSeatRow' style='height:35px !important;' id='editRow" + (i+1) + "'>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;vertical-align:top;padding-top:10px;' align='center'><input type='radio' name='editDefaultSeating' id='editDefaultSeat"+ (i+1) + "' value='" + (i+1) + "' class='editDefaultSeat' "+ (seatingParamLiat[3] == 0 ? "/></td>" : "checked='checked' /></td>")  +
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><input type='text' class='timepickernew' style='width:120px;' value='"+ timeHours + ":" + timeMinutes +"'/></td>"+
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><input type='text' class='positive-integer-only' style='width:120px;' value='"+ seatingParamLiat[1] +"'/></td>"+
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><input type='text' class='positive-integer-reserved' style='width:120px;' value='"+ seatingParamLiat[2] +"' /></td>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;display:hidden;' id='editcol" + (i+1) + "' align='center'><input type='text' class='editEventId' style='width:120px;display:hidden;' value='"+ seatingParamLiat[4] +"' /></td>");
                    $("#editcol" + (i+1)).hide();
                    $("#editSeatRow" + (i+1) + " > td:eq(0)").css("width", "30px");
                    $("#editDefaultSeat" + (i+1)).width("30px");
                }
            }
            $('.timepickernew').timepicker({ showLeadingZero: true, showPeriodLabels: false});
            $(".positive-integer-only").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });
            $(".positive-integer-reserved").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });

            isEdited = true;
            $("#edit-seating").show();
        });

        function getCommissionValue()
        {

            return $("#Commission").val();
        }

        $("#btnEditHostSeating").click(function() {
            $("#dialog-form").hide();
            $("#multiListing").hide();
            var full_content = $("#Seatings").val();
            var seatingList = new Array();
            seatingList = full_content.split(",");
            $("#tbl_edit_host_seating tbody tr").remove();
            if(seatingList.length > 0)
            {
                full_content = "";
                for (var i=0;i<seatingList.length;i++)
                {
                    var seatingParamLiat = new Array();
                    seatingParamLiat = seatingList[i].split("|");
                    var timeHours = seatingParamLiat[0].split(":")[0];
                    var timeMinutes = seatingParamLiat[0].split(":")[1];
                    timeMinutes = timeMinutes < 10 ? "0" + timeMinutes : timeMinutes;

                    $("#tbl_edit_host_seating tbody").append("<tr class='editSeatRow' style='height:35px !important;' id='editRow" + (i+1) + "'>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;vertical-align:top;padding-top:10px;' align='center'><input type='radio' name='editDefaultSeating' id='editDefaultSeat"+ (i+1) + "' value='" + (i+1) + "' class='editDefaultSeat' "+ (seatingParamLiat[3] == 0 ? "/></td>" : "checked='checked' /></td>")  +
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><span class='seatTime' style='width:120px;'>"+ timeHours + ":" + timeMinutes +"</span></td>"+
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><input type='text' class='positive-integer-only' style='width:120px;' value='"+ seatingParamLiat[1] +"'/></td>"+
                            "<td style='border:1px solid #e2e2e2;width:150px;' align='center'><input type='text' class='positive-integer-reserved' style='width:120px;' value='"+ seatingParamLiat[2] +"' /></td>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;display:hidden;' id='editcol" + (i+1) + "' align='center'><input type='text' class='editEventId' style='width:120px;display:hidden;' value='"+ seatingParamLiat[4] +"' /></td>");
                    $("#editcol" + (i+1)).hide();
                    $("#editSeatRow" + (i+1) + " > td:eq(0)").css("width", "30px");
                    $("#editDefaultSeat" + (i+1)).width("30px");
                }
            }
            $(".positive-integer-only").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });
            $(".positive-integer-reserved").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });

            isEdited = true;
            $("#edit-seating-host").show();
        });

        var isMenuEdited = false;
        $("#btnEditMenu").click(function(e) {
            debugger;
            $("#dialog-form-menu").hide();
            $("#multiMenuListing").hide();
            var full_content = $("#MenuOptions").val();
            var menuList = new Array();
            var  commission=getCommissionValue();
            menuList = full_content.split(",");
            $("#tbl_edit_menu tbody tr").remove();
            if(menuList.length > 0)
            {
                full_content = "";
                for (var i=0;i<menuList.length;i++)
                {
                    var menuParamLiat = new Array();
                    menuParamList = menuList[i].split("|");

                    $("#tbl_edit_menu tbody").append("<tr class='editMenuRow' style='height:35px !important;' id='editMenuRow" + (i+1) + "'>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;vertical-align:top;padding-top:10px;' align='center'><input type='radio' name='editDefaultMenuOption' id='editDefaultMenu"+ (i+1) + "' value='" + (i+1) + "' class='editDefaultMenu' "+ (menuParamList[3] == 0 ? "/></td>" : "checked='checked' /></td>")  +
                            "<td style='border:1px solid #e2e2e2;width:150px;vertical-align:middle;' align='center'><textarea class='menuTitle' style='width:120px;' id='menuTitle"+ (i+1) + "'>" + unescape(menuParamList[0]) + "</textarea></td>" +
                            "<td style='border:1px solid #e2e2e2;width:180px;vertical-align:middle;' align='center'><textarea class='editMenuDescription' style='width:150px;' id='menuDesc"+ (i+1) + "'>" + unescape(menuParamList[1]) + "</textarea></td>" +
                            "<td style='border:1px solid #e2e2e2;width:100px;vertical-align:middle;' align='center'><input type='text' class='positive-edit-menu' style='width:120px;' value='" + menuParamList[2] +"'/></td>" +
                            "<td style='border:1px solid #e2e2e2;width:100px;vertical-align:middle;' align='center'>+<span class='CommissionText'> "+ commission   +"</span>% =</td>" +
                            "<td style='border:1px solid #e2e2e2;width:100px;vertical-align:middle;' align='center'><label class='GuestPrice'>"+(parseFloat(menuParamList[2])+parseFloat(menuParamList[2]*(commission/100))) +"</label></td>" +
                            "<td style='border:1px solid #e2e2e2;width:50px;display:hidden;' align='center' id='editmenucol" + (i+1) + "'><input type='text' class='editMenuEventId' style='width:120px;display:hidden;' value='"+ menuParamList[4] +"' /></td>");

                    $("#editmenucol" + (i+1)).hide();
                    $("#editMenuRow" + (i+1) + " > td:eq(0)").css("width", "50px");
                    $("#editMenuRow" + (i+1) + " > td:eq(1)").css("width", "150px");
                    $("#editMenuRow" + (i+1) + " > td:eq(2)").css("width", "180px");
                    $("#editMenuRow" + (i+1) + " > td:eq(3)").css("width", "100px");
                    $("#editMenuRow" + (i+1) + " > td:eq(4)").css("width", "100px");
                    $("#editMenuRow" + (i+1) + " > td:eq(5)").css("width", "100px");
                    $("#editMenuRow" + (i+1) + " > tr").css("height", "50px");
                    $("#editDefaultMenu" + (i+1)).width("30px");
                    $("#menuTitle" + (i+1)).width("120px");
                    $("#menuTitle" + (i+1)).css('height', '50px');
                    $("#menuTitle" + (i+1)).css('float', 'left');
                    $("#menuDesc" + (i+1)).width("150px");
                    $("#menuDesc" + (i+1)).height("50px");
                    $("#menuDesc" + (i+1)).css('float', 'left');
                }
            }
            $(".positive-edit-menu").numeric({ negative: false }, function() { alert("No negative values"); this.value = ""; this.focus(); });
            $(".menuTitle").attr("maxLength", 50);
            $("td.editDefaultMenu", "#tbl_edit_menu tbody").width(50+"px");
            $("td.editMenuDescription", "#tbl_edit_menu tbody").css('float', 'left');
            $("td.menuTitle", "#tbl_edit_menu tbody").css('float', 'left');
            isMenuEdited = true;
            $("#edit-menu").show();
            e.preventDefault();

            $('.positive-edit-menu').change(function()
            {
       
                $('tr.editMenuRow').each(function() {
                    $this = $(this);
                
                    var menuCost = $this.find("input.positive-edit-menu").val();
                    var comm=getCommissionValue();
                    var GuestCost = $this.find(".GuestPrice");

                    GuestCost.text(parseFloat(menuCost)+parseFloat(menuCost*(comm/100)));
                
                });
        
            });
        });

        function UpdateSeatingInfo(){
            var full_content = "";
            $('tr.editSeatRow').each(function() {
                $this = $(this);
                if(full_content.length > 0)
                    full_content += ",";
                row_content="";
                var totalGuestCount = $this.find("input.positive-integer-only").val();
                var reservedSeatCount = $this.find("input.positive-integer-reserved").val();
                var seatingTimeSel = ($("span.seatTime").length > 0) ? ($this.find("span.seatTime").text()):($this.find("input.timepickernew").val());
                var isDefault = $this.find("input.editDefaultSeat").is(':checked');
                var eventId = $this.find("input.editEventId").val();
                if(isDefault)
                {
                    var splitTime=seatingTimeSel.split(":");
                    var start_date = @Model.Start.Day +"/"+@Model.Start.Month+"/"+@Model.Start.Year+ " " + splitTime[0]+':'+splitTime[1]+':00';
                    $('#StartTime').val(start_date);
                    $('#Guests').val(totalGuestCount);
                    $('#ReservedSeats').val(reservedSeatCount);
                }
                var row_content= seatingTimeSel + "|" + totalGuestCount + "|" +  reservedSeatCount + "|" +  (isDefault? "1":"0") + "|" + eventId;
                full_content += row_content ;
            });
            //alert("full_content:" + full_content);
            $("#Seatings").val(full_content);
        }

        function UpdateMenuInfo(){
            var full_content = "";
            $('tr.editMenuRow').each(function() {
                $this = $(this);
                if(full_content.length > 0)
                    full_content += ",";
                row_content="";
                var menuTitle = $this.find('textarea').eq(0).val();
                var menuDescription = $this.find('textarea').eq(1).val();
                var menuCost = $this.find("input.positive-edit-menu").val();
                var isDefault = $this.find("input.editDefaultMenu").is(':checked');
                var eventId = $this.find("input.editMenuEventId").val();
                if(isDefault)
                {
                    $('#CostTextDisplay').val(menuCost);
                    $('#Cost').val(menuCost);
                }
                var row_content= escape(menuTitle) + "|" + escape(menuDescription) + "|" +  menuCost + "|" + (isDefault? "1":"0") + "|" + eventId;
                full_content += row_content ;
            });
            //alert("full_content:" + full_content);
            $("#MenuOptions").val(full_content);
        }
        var seatingCounter = @Model.EventSeatings.Count + 1;
        var menuCounter = @Model.EventMenuOptions.Count + 1;
        $("#btnAdd").click(function() {
            var full_content = $("#Seatings").val();
            var totalGuestCount = $("#guestsMulti").val();
            var reservedSeatCount = $("#reservedSeatsMulti").val();
            if(reservedSeatCount.length == 0 || reservedSeatCount =="")
                reservedSeatCount = 0;
            var seatingTimeSel = $('#timepicker_start').val();
            var isDefault = $("#defaultSeating").is(':checked');
            var end_date = new Date(@Model.Start.Year,@Model.Start.Month,@Model.Start.Day,$('#timepicker_start').timepicker('getHour'),$('#timepicker_start').timepicker('getMinute'),0);
            var end_date = end_date.addHours(@Model.Duration);
            var newStart = @Model.Start.Day +"/"+@Model.Start.Month+"/"+@Model.Start.Year+ " " + $('#timepicker_start').timepicker('getHour') +':'+ $('#timepicker_start').timepicker('getMinute') +':00';
            var newEnd = @Model.Start.Day +"/"+@Model.Start.Month+"/"+@Model.Start.Year+ " " + end_date.getHours() +':'+ end_date.getMinutes() +':00';

            var error = false;
            if(!error && totalGuestCount.length <=0 || seatingTimeSel.length <=0)
            {
                alert("Guest count and seating time can not be blank!");
            }
            if(isDefault)
            {
                var row_content= ","+ seatingTimeSel + "|" + totalGuestCount + "|" +  reservedSeatCount + "|1|0";
                var seatingList = new Array();
                seatingList = full_content.split(",");
                if(seatingList.length > 0)
                {
                    full_content = "";
                    for (var i=0;i<seatingList.length;i++)
                    {
                        var seatingParamLiat = new Array();
                        seatingParamLiat = seatingList[i].split("|");

                        if(full_content.length > 0)
                            full_content += ",";
                        full_content += seatingParamLiat[0] +  "|" + seatingParamLiat[1] + "|" +  seatingParamLiat[2] +  "|0|" + seatingParamLiat[4];
                        $("#seat-" + (i+1)).text('');
                    }
                }
                full_content += row_content;
                spanContent = "<span class='timingsEventMulti'> Seating " + seatingCounter +
                        ": <span>" + seatingTimeSel + " - " + end_date.getHours() + ":" + (end_date.getMinutes() < 10 ? ("0"+end_date.getMinutes()) : end_date.getMinutes())  + "</span><span>" + (totalGuestCount - reservedSeatCount).toString() +
                        " / " + totalGuestCount +  " available</span><span>" + reservedSeatCount + " Reserved</span><span style='color:#FF3300;font-family:'Lobster', Cursive;font-size:16px;float:right;' id='seat-"+ seatingCounter + "'>Main Seating</span></span><br />";
                var splitTime=seatingTimeSel.split(":");

                $('#StartTime').val(newStart);
                $('#Guests').val(totalGuestCount);
                $('#ReservedSeats').val(reservedSeatCount);
            }
            else
            {
                var row_content= seatingTimeSel + "|" + totalGuestCount + "|" +  reservedSeatCount + "|" +  (isDefault? "1":"0") + "|0";
                if(full_content.length > 0)
                    full_content += ",";
                full_content += row_content ;
                spanContent = "<span class='timingsEventMulti'> Seating " + seatingCounter +
                        ": <span>" + seatingTimeSel + " - " + end_date.getHours() + ":" + (end_date.getMinutes() < 10 ? ("0"+end_date.getMinutes()) : end_date.getMinutes())  + "</span><span>" + (totalGuestCount - reservedSeatCount).toString() +
                        " / " + totalGuestCount +  " available</span><span>" + reservedSeatCount + " Reserved</span><span id='seat-"+ seatingCounter + "'></span></span><br />";
            }

            seatingCounter++;
            $("#Seatings").val(full_content);
            $('#multiListing').append(spanContent);
            alert("Seating added. Please click update to save the changes.");
            $("#guestsMulti").val("");
            $("#reservedSeatsMulti").val("");
            $("#timepicker_start").val("");
            $("#dialog-form").hide();
        });

        $("#btnAddMenu").click(function(e) {
            debugger;
            var full_content = $("#MenuOptions").val();
            var isDefault = $("#defaultMenu").is(':checked');
            var title = $("#menuTitle").val();
            var description = $("#menuDescription").val();
            var mCost = $('#menuCost').val();
            var mcommission=$('#Commission').val();
            var gCost = parseFloat($('#menuCost').val()).toFixed(2);
            $.getJSON('@Url.Action("GetCostToGuest", "Event")', { baseCost: mCost, commission:mcommission }, function (getCostToGuest) {
                gCost = getCostToGuest.DisplayCost;
                var spanContent = "";
                if(title.length <=0 || description.length <=0 || mCost.length <= 0)
                {
                    alert("Menu option title, description and cost can not be blank!");
                }
                else
                {
                    if(isDefault)
                    {
                        var row_content= ","+ escape(title) + "|" + escape(description) + "|" +  mCost +  "|1|0";

                        var menuList = new Array();
                        menuList = full_content.split(",");
                        if(menuList.length > 0)
                        {
                            full_content = "";
                            for (var i=0;i<menuList.length;i++)
                            {
                                var menuParamLiat = new Array();
                                menuParamLiat = menuList[i].split("|");

                                if(full_content.length > 0)
                                    full_content += ",";
                                full_content += menuParamLiat[0] +  "|" + menuParamLiat[1] + "|" +  menuParamLiat[2] +  "|0|" + menuParamLiat[4];
                                $("#menu-"+(i+1)).text('');
                            }
                            full_content += row_content;

                            spanContent = "<ul class='menuMulti1' style='list-style-type: none;'><li style='font-weight:bold;'> Option " + menuCounter +
                                    ": </li><li style='display:inline;padding-right:15px;'>" + title + "<li style='font-weight:bold;color:#FF3300; display:inline;padding-right:15px;'> £" + gCost + "</li><li style='color:#FF3300;font-family:'Lobster', Cursive;font-size:16px;display:inline;' id='menu-" + menuCounter + "'>Main Menu Option</li><li>" +
                                     description  + "</li></ul><br />";
                            $("#CostTextDisplay").val(mCost);
                        }
                    }
                    else
                    {
                        var row_content= title + "|" + description + "|" +  mCost +  "|0|0";
                        if(full_content.length > 0)
                            full_content += ",";
                        full_content += row_content ;
                        spanContent = "<ul class='menuMulti1' style='list-style-type: none;'><li style='font-weight:bold;'> Option " + menuCounter +
                                    ": </li><li style='display:inline;padding-right:15px;'>" + title + "<li style='font-weight:bold;color:#FF3300; display:inline;padding-right:15px;'> £" + gCost + "</li><li style='display:inline;' id='menu-" + menuCounter + "'></li><li>" +
                                     description  + "</li></ul><br />";
                    }
                    
                    menuCounter++;
                    $("#MenuOptions").val(full_content);
                    $('#multiMenuListing').append(spanContent);
                    alert("Menu Option added. Please click update to save the changes.");
                    $("#menuTitle").val("");
                    $("#menuDescription").val("");
                    $("#menuCost").val("");
                    $("#dialog-form-menu").hide();
                    e.preventDefault();
                }
            });
        });
        jQuery.validator.methods["date"] = function (value, element) { return true; } 
        $('.date').datepicker({
            dateFormat: "dd/mm/yy",
            minDate: new Date(@DateTime.Now.Year, @DateTime.Now.Month - 1, @DateTime.Now.Day),
            defaultDate: '@Model.Start.Day/@Model.Start.Month/@Model.Start.Year'});

        $('#StartTime').timepicker({
            defaultTime: '@Model.Start.Hour:@Model.Start.Minute',
            showLeadingZero: true,
            showPeriodLabels: false});

        $("#StartTime").val("@Model.Start.Hour:@Model.Start.Minute");

        $('.timepicker').timepicker({
            showLeadingZero: true,
            showPeriodLabels: false});

        $(".positive").numeric({ negative: false }, function() { alert("No negative values"); this.value = ""; this.focus(); });

        $(".positive-integer").numeric({ decimal: false, negative: false }, function() { alert("Positive integers only"); this.value = ""; this.focus(); });

        $("#EventDetailsForm").submit(function () {
            debugger;
            var str = "";
            $("#searchableTag option:selected").each(function() {
                str += $(this).val() + ",";
            });
            $("#EventTagList").val(str);

            var str1 = "";
            $("#searchableCity option:selected").each(function() {
                str1 += $(this).val() + ",";
            });
            $("#EventCityList").val(str1);

            var str2 = "";
            $("#searchableArea option:selected").each(function() {
                str2 += $(this).val() + ",";
            });
            $("#EventAreaList").val(str2);
            debugger;
            //Combine event description
            var _description = $('.counter').val();
            if ($.trim($('.counter1').val()).length > 0)
                _description += "|&|" + $('.counter1').val(); 
            if ($.trim($('.counter2').val()).length > 0)
                _description +=  "|&|" + $('.counter2').val();
            if ($.trim($('.counter3').val()).length > 0)
                _description += "|&|" + $('.counter3').val();
            $("#Description").val(_description);

            //var _menu = $("#EventMenu").val();
            //$("#Menu").val(_menu);

            $("#EventDetailsForm").validate();
            //Get any tab with errors
            var tabWithError = $("#EventDetailsForm .input-validation-error").closest(".tab-content");
            if (tabWithError.length > 0) {
                tabName = tabWithError.get(0).id;
                tabSelect = tabName.substring(3);
                //Reset active class for nav and display tab block contents
                $(".tabs-nav").children().removeClass("active");
                $("#tabnav" + tabSelect).addClass("active");

                $(".tabs-container").children().css("display", "none");
                $("#tab" + tabSelect).css("display", "block");
            }
            // Handle Diet CheckBoxes - convert back to comma delimited string
            var diets = "";
            $(".dietCB:checked").each(function () {
                diets = diets + this.name + "|" + @(((int)SupperClub.Domain.DietType.Diet).ToString()) + "%";
            });
            var array = @Html.Raw(
                Json.Encode(
                ((IEnumerable<SupperClub.Domain.Diet>)ViewBag.AllergyDiets).Select(d => new { dietName = d.Name, dietId = d.Id, dietType = d.DietTypeId })));
            for (var i = 0; i < array.length; i++) {
                if($('#'+ array[i].dietId).is(':checked'))
                {
                    diets = diets + array[i].dietName + "|" + array[i].dietType + "%";
                }
            }
            var otherAllergy = $("#txtOtherAllergy").val();
            if( otherAllergy.length > 0)
            {
                diets = diets + otherAllergy + "|" + @(((int)SupperClub.Domain.DietType.Others).ToString()) + "%";
                $("#OtherAllergyText").val(otherAllergy);
            }
            $("#Diets").val(diets); // Update the hidden field

            var ms = "@Model.MultiSeating";
            var mm = "@Model.MultiMenuOption";
            if(ms.toUpperCase() =="TRUE" && isEdited)
            {
                UpdateSeatingInfo();
            }
            if(mm.toUpperCase() == "TRUE" && isMenuEdited)
            {
                UpdateMenuInfo();
            }
        });

        // If the Request contains ?edit=true then show the editor fields
        var url = window.location.href;
        if(url.indexOf('&edit=True') != -1)
        {
            $("#btnEdit").click();
        }
        if(url.indexOf('&guestlist=True') != -1)
        {
            $("#tabnav5").click();
        }
        $('#btnChooseFile').click(function () {
            $('#File').click();
        });

        $('#File').change(function () {
            var filePath = $('#File').val();
            var fileName = filePath.substring(filePath.lastIndexOf('\\') + 1);

            $('#btnChooseFile').val("Change Picture File");
            $('#lblChooseFile').html("Ready to use file: <strong>" + fileName + "</strong>");
        });

        $('#btnHide').click(function(){
            $('#divEmail').hide();
        });
    });

    function RankAttendee(eventId, userId, rank) {
        $.getJSON('@Url.Action("RankAttendee", "Event")', { eventId: eventId, eventAttendeeId: userId, ranking: rank }, function (success) {
            if (success == false) {
                alert("There was a problem ranking this user, please try again or contact and Administrator");
            }
            else {
                if (rank > 0) {
                    $("#" + userId + " .positive").removeClass("white").addClass("green");
                    $("#" + userId + " .positive").children().addClass("icon-white");
                    $("#" + userId + " .negative").removeClass("red").addClass("white");
                    $("#" + userId + " .negative").children().removeClass("icon-white");
                }
                else if (rank < 0) {
                    $("#" + userId + " .positive").removeClass("green").addClass("white");
                    $("#" + userId + " .positive").children().removeClass("icon-white");
                    $("#" + userId + " .negative").removeClass("white").addClass("red");
                    $("#" + userId + " .negative").children().addClass("icon-white");
                }
            }
        });
    }

    function RejectAttendee(eventId, userId, seatingId, menuOptionId, notifyGuest, numberOfGuests, totalPrice) {
        numberOfGuests = (typeof numberOfGuests === "undefined") ? 0 : numberOfGuests;
        totalPrice = (typeof totalPrice === "undefined") ? 0 : totalPrice;
        var message = notifyGuest ? 'Are you sure you want to reject this attendee?' : 'Are you sure you want to cancel this booking?';
        var conf = confirm(message);
        if(conf) {
            $.getJSON('@Url.Action("RejectAttendee", "Event")', { eventId: eventId, eventAttendeeId: userId, seatingId : seatingId, menuOptionId : menuOptionId, notifyGuest: notifyGuest, numberOfGuests: numberOfGuests, totalPrice: totalPrice }, function (success) {
                if (success == false) {
                    if(notifyGuest)
                        alert("There was a problem rejecting this user, please try again or contact an Administrator");
                    else
                        alert("There was a problem cancelling this booking, please try again or contact an Administrator");
                }
                else {
                    if(notifyGuest)
                        alert("Guest rejected successfully!");
                    else
                        alert("Booking cancelled successfully!");

                    $("#" + userId + "_" + seatingId.toString() + "_" + menuOptionId.toString()).remove();
                }
            });
        }
    }
    function AddEditNote(eventId, userId, seatingId, menuOptionId, note) {
        var tdEdit = "<div id=\"div"+ userId.toString()+seatingId.toString()+menuOptionId.toString() + "><textarea>" + note + "</textarea><a href=\"#\" onclick=\"SaveNote(" + eventId + ", " + userId + ", " + seatingId + ", " + menuOptionId + ");\" class=\"button medium yellow\">Save</a><a id=\"btnNoteCancel\" href=\"#\" class=\"button medium yellow\">Cancel</a></div>"
        $("#divShow " + userId.toString() + seatingId.toString() + menuOptionId.toString()).hide();
        $("#td " + userId.toString() + seatingId.toString() + menuOptionId.toString()).append(tdEdit);
    }
    function SaveNote(eventId, userId, seatingId, menuOptionId, note) {
        $.getJSON('@Url.Action("SaveNote", "Event")', { eventId: eventId, eventAttendeeId: userId, seatingId : seatingId, menuOptionId : menuOptionId, note : note }, function (success) {
            if (success == false) {
                alert("There was a problem adding note, please try again or contact an Administrator");
            }
            else {
                $("#" + userId.toString()+seatingId.toString()+menuOptionId.toString()).val(note);
                $("#div"+ userId.toString()+seatingId.toString()+menuOptionId.toString()).remove();
                $("#divShow " + userId.toString() + seatingId.toString() + menuOptionId.toString()).show();
            }
        });
    }
    function CancelEvent() {
        var conf = confirm('Are you sure you want to cancel your event?');
        if(conf) {
            window.location = '@Url.Action("CancelEvent", "Event", new { eventId = Model.Id })';
        }
    }

    function GotoTab(tabId) {
        //Reset active class for nav and display tab block contents
        $(".tabs-nav").children().removeClass("active");
        $("#tabnav" + tabId).addClass("active");

        $(".tabs-container").children().css("display", "none");
        $("#tab" + tabId).css("display", "block");
    }

    function IsEmail(email) {
        var regex1 = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex1.test(email);
    }
    // Waiting List Pop-up
    function PutOnWaitList() {
        var eventId = @Model.Id;
        if(eventId == null)
        {
            alert("There was a problem adding to waiting list, please try again or contact an Administrator.");
        }
        else
        {
            if("@SupperClub.Code.UserMethods.IsLoggedIn.ToString().ToUpper()" == "TRUE")
            {
                $.getJSON('@Url.Action("AddToWaitListRegisteredUser", "Search")', { eventId: eventId, source: "Event" }, function (success) {
                    if (success == false) {
                        alert("There was a problem adding to waiting list, please try again or contact an Administrator.");
                    }
                    else {
                        alert("You have been added to Waitlist.");
                    }
                });
            }
            else
            {
                $("input[id=hdnEventId]").val(eventId);
                $("#txtAddWaitlistEmail").val("");
                $("#lblStatus").text("");
                $("#dialog").show();
                $("#dialog").dialog();
            }
        }
    }


    function endsWith(str, suffix) {
        return str.indexOf(suffix, str.length - suffix.length) !== -1;
    }

    var showErrorClicks = 0;
    function ShowErrorClicks() {
        if (showErrorClicks == parseInt(@System.Web.Configuration.WebConfigurationManager.AppSettings["ShowValidationSummaryClicks"])) {
            $('#validationSummary').toggle();
        }
        else {
            showErrorClicks += 1;
        }
    }

    $(function () {
        $('.fadein .active:gt(0)').hide();
        refreshIntervalId = setInterval(function () { $('.fadein .active:eq(0)').fadeOut().next('.active').fadeIn().end().appendTo('.fadein'); }, 5000);
    });

    function LatestEventSliderStop()
    {
        clearInterval(refreshIntervalId);
    };

    function LatestEventsSlider()
    {
        refreshIntervalId = setInterval(function () { $('.fadein .active:eq(0)').fadeOut().next('.active').fadeIn().end().appendTo('.fadein'); }, 5000);
    };

</script>
    <!-- Sharethis buttons -->
    @*<script type="text/javascript" src="https://w.sharethis.com/button/buttons.js"></script>
    <script type="text/javascript"> stLight.options({ publisher: "@System.Web.Configuration.WebConfigurationManager.AppSettings["ShareThisPublisherId"]" }); </script>*@
           
}
<!--  Page Title -->
<div class="pattern-design2">
    <div class="container">
        <p>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() / @ViewBag.Title</p>
    </div>	
</div>
<!-- Page Title End -->
@if (ViewBag.Notification != null || TempData["Notification"] != null)
{
    SupperClub.Models.NotificationModel nModel = (ViewBag.Notification == null) ? (SupperClub.Models.NotificationModel)TempData["Notification"] : (SupperClub.Models.NotificationModel)ViewBag.Notification;
    TempData["Notification"] = null;
    @Html.Partial("_Notification", nModel);
}
@if (ViewBag.HideMainContainer == null || ViewBag.HideMainContainer == false)
{    
    <!-- 960 Container Start -->
    <div class="container" itemprop="event" itemscope itemtype="http://schema.org/Event">
        <div class="col-xs-12 sub-title2">
            <h2><span itemprop="name">@Model.Name</span></h2>
        </div>
        @using (Html.BeginForm("UpdateDetails", "Event", FormMethod.Post, new { id = "EventDetailsForm", style = "margin-bottom: 0px;", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.DateApproved)
            <div class="six columns" style="margin-top: 10px">
            
                <div class="small-slider slider">
                    @if (Model.EventImages.Count > 1)
                    {
                        <ul class="rslides">    
                            @foreach (var _image in Model.EventImages)
                            {
                                <li>
                                    <a href="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + _image.ImagePath)" rel="imagebox" title="@Model.Name">
                                        <img src="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + _image.ImagePath)" alt="@Model.Name | Grubclub" />
                                        <div class="overlayNew zoom"></div>
                                    </a>
                                </li>
                            }
                         </ul>                                           
                    }
                    else
                    {
                        <div class="item-img">
                                <a href="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + Model.ImagePath)" rel="imagebox" title="@Model.Name">
                                    <img itemprop="image" src="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + Model.ImagePath)" alt="@Model.Name | Grubclub" />
                                <div class="overlay zoom"></div>
                            </a>
                        </div>
                    }
                    <p></p><p></p>

                    @if (Model.End < DateTime.Now)
                    {
                        <div class="details-ratings" itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
                            <span><strong>RATING </strong><span class="details-ratings" style="padding-top:6px" itemprop="reviewCount"> (@Model.NumberGuestRanks votes)</span></span>                            
                            <meta itemprop="ratingValue" content="@(Model.AverageRank)" /> 
                            <meta itemprop="bestRating" content="5" /> 
                            <div class="ratings-stars star@(Model.AverageRank)"></div>
                        </div>
                    }
                    
                    <div class="details-timings-container timings-info">
                    <h6 style="display: inline;">DATE: </h6> @Model.Start.ToString("ddd, d MMM yyyy")
                    <br />
                    <h6 style="display: inline;">TIME: </h6>
                    @if (!Model.MultiSeating)
                    {
                        @: @Model.Start.ToShortTimeString() - @Model.End.ToShortTimeString()
                        <h6 style="display: inline;">SEATS: </h6>@Model.Guests
                    }
                    else
                    {
                        if (Model.EventSeatings.Count > 0)
                        {
                            @: @Model.MinSeatingTime.ToShortTimeString() Onwards
                        }
                        else
                        {
                           @: @Model.Start.ToShortTimeString() - @Model.End.ToShortTimeString()
                        }
                    }                                                             
                    
                    </div>
                </div>
                <div class="portfolio-item-meta"> 
                    <p></p> 
                       @if (SupperClub.Code.UserMethods.IsAdmin)
                       {
                            <a id="btnCancelEvent" href="#" onclick="CancelEvent();" class="button medium red" style="float:right">Cancel Event</a>
                            <input type="button" id="btnEdit" value="Edit Event" class="button medium yellow" style="float: left" />
                            <input type="submit" id="btnUpdate" value="Update" class="button medium orange" style="float: left" />
                       }
                       else
                       {
                            <!-- Event and Booking Section -->
                           if (Model.Start > DateTime.Now && Model.Status == (int)SupperClub.Domain.EventStatus.Active)
                           {
                               if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                               {
                                    <input type="button" id="btnEdit" value="Edit Event" class="button medium yellow" style="float: left" />
                                    <input type="submit" id="btnUpdate" value="Update" class="button medium orange" style="float: left" />
                               }
                               else if (int.Parse(ViewBag.AvailableSeats) > 0 && Model.Status == (int)SupperClub.Domain.EventStatus.Active)
                               {
                                   if (Model.NumberOfAttendeeGuests(SupperClub.Code.UserMethods.UserId) > 0)
                                   {
                                        <a href="@Url.Action("BookEvent", "Event", new { eventId = Model.Id })" class="button medium yellow" style="">Book Again</a>
                                   }
                                   else
                                   {
                                        <a href="@Url.Action("BookEvent", "Event", new { eventId = Model.Id })" class="button large green" style="">Book Now</a>
                                   }
                               }
                           }
                           else if (Model.Start > DateTime.Now && Model.Status == (int)SupperClub.Domain.EventStatus.New)
                           {
                               if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                               {
                                    <input type="button" id="btnEdit" value="Edit Event" class="button medium yellow" style="float: left" />
                                    <input type="submit" id="btnUpdate" value="Update" class="button medium orange" style="float: left" />
                               }
                           }
                       }
                    
                    <!-- Hosted By Section -->
                    <div class="hosted-by">
                        <h5>Hosted By:</h5>

                        <div class="meta-image">
                            <a href="@(SupperClub.Code.ServerMethods.ServerUrl + Model.SupperClub.UrlFriendlyName)" >
                                <img style="width: 65px" src="@Url.Content(SupperClub.Code.ServerMethods.SupperClubImagePath + Model.SupperClub.ImagePath)" alt="@Model.SupperClub.Name | GrubClub" />
                            </a>
                        </div>

                 	    <div class="meta-copy">
                            <a href="@(SupperClub.Code.ServerMethods.ServerUrl + Model.SupperClub.UrlFriendlyName)" style="color: #3F8FAF">@Model.SupperClub.Name</a>
                            
                            <div>
                                @if (Model.SupperClub.Summary.Length > 75)
                                {
                                    @(Model.SupperClub.Summary.Substring(0, 75) + "...")
                                }
                                else
                                {
                                    @Model.SupperClub.Summary
                                }   
                            </div>
                        </div>
                    </div>    
                                    
                    @if (Model.Status == (int)SupperClub.Domain.EventStatus.Cancelled)
                    {
                        <h5 style="text-align: center; color:Red">EVENT CANCELLED</h5>
                    }
                    else if (Model.Status == (int)SupperClub.Domain.EventStatus.Rejected)
                    {
                        <h5 style="text-align: center; color:Red">EVENT REJECTED</h5>
                    }
                    else if (Model.Status == (int)SupperClub.Domain.EventStatus.New)
                    {
                        <h5 style="text-align: center; color:Red">WAITING FOR APPROVAL</h5>
                    }
                    else
                    {
                        <!-- Sharing Section -->
                        <h5>Tell Your Friends about this event</h5>
                        <p></p>
                        @*http://support.sharethis.com/customer/portal/articles/475079-share-properties-and-sharing-custom-information
                        old: st_title="@Model.Name" st_url="@Request.Url.AbsoluteUri" st_image="@(Request.Url.GetLeftPart(System.UriPartial.Authority) + Url.Content(SupperClub.Code.ServerMethods.SupperClubImagePath + Model.ImagePath))" st_summary="@Model.Description"*@
                        <span class='st_googleplus_large' displayText='Google +'>
                        </span>
                        <span class='st_facebook_large' displayText='Facebook'>
                        </span>
                        @*http://support.sharethis.com/customer/portal/articles/517332-share-widget-faqs
                        How do I add via @TwitterHandle to the end of Twitter shares from my site?*@
                        <span class='st_twitter_large' displayText='Tweet' st_via="Grub_Club" st_msg="#SupperClub #Event">
                        </span>
                        <span class='st_pinterest_large' displayText='Pinterest'>
                        </span>
                    }
                </div>
            </div>
            
            <div class="nine columns event-info">
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.Active)
                @Html.HiddenFor(m => m.Status)
                @Html.HiddenFor(m => m.ImagePath)
                @Html.HiddenFor(m => m.DateCreated)                
                @Html.HiddenFor(m => m.UrlFriendlyName)
                @Html.HiddenFor(m => m.MultiSeating)
                @Html.HiddenFor(m => m.MultiMenuOption)
                @Html.HiddenFor(m => m.Seatings)
                @Html.HiddenFor(m => m.MenuOptions)

                <!-- Hidden Validation Summary --->
                <div id="validationSummary" style="display:none">
                    @Html.ValidationSummary()
                    <br />
                </div>
                
                <!-- Tabs Navigation -->
                <ul class="tabs-nav">
                    <li class="active" id="tabnav1"><a href="#tab1">Details</a></li>
                    <li id="tabnav2"><a href="#tab2">Menu</a></li>
                    <li id="tabnav3"><a href="#tab3">Other</a></li>
                    @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                    {
                        <li id="tabnav4"><a href="#tab4">Picture</a></li>
                        <li id="tabnav5"><a href="#tab5">Guests</a></li>                        
                    }
                    else
                    {
                        <li id="tabnav6"><a href="#tab6">Chef</a></li>
                    }
                    <li id="tabnav7"><a href="#tab7" onclick="ShowErrorClicks();">Location</a></li>
                    @if (SupperClub.Code.UserMethods.IsAdmin)
                    {
                        <li id="tabnav8"><a href="#tab8">Waiting List</a></li>
                    }
                </ul>
                
                <!-- Tabs Content -->
                <div class="tabs-container">
                    <div class="tab-content" id="tab1">
                        <div class="details-column">
                            @if (!Model.MultiSeating)
                            {
                                <h5>Event Date and Time</h5>
                                <p style="display:inline;">@Html.Raw(Model.Start.ToString("ddd, d MMM yyyy") + " " + Model.Start.ToShortTimeString() + " - " + Model.End.ToShortTimeString())</p>    
                                if (Model.TotalNumberOfAvailableSeats <= 0)
                                {
                                    <p style="color:#CB0019;font-family:'Lobster', Cursive;font-size:17px;display:inline;margin-right:38px;margin-left:38px;">    SoldOut    </p>
                                    <input type="button" value="Add Me to Waiting List" onclick="PutOnWaitList();" class="button medium green" style="float:right;margin-top:-25px;" />
                                }
                                <br />
                                <br />
                            }
                            else
                            {
                                @Html.HiddenFor(m => m.DefaultSeatingId);
                                                                        if (@Model.EventSeatings.Count > 1)
                                                                        {
                                    <h5>Event Seatings Details</h5>
                                                                        }
                                                                        else
                                                                        {
                                    <h5>Event Details</h5>
                                                                        }
                                <p>@Model.Start.ToString("ddd, d MMM yyyy")</p>
                                                                        var seatingCnt = 1;
                                <div id="multiListing" style="margin-bottom:20px;">
                                    @foreach (SupperClub.Domain.EventSeating es in Model.EventSeatings.OrderBy(x => x.Start))
                                    { 
                                            <span class="timingsEventMulti">  
                                                @if (@Model.EventSeatings.Count > 1)
                                                {
                                                    @: Seating @seatingCnt:
                                                }                                     
                                                <span>@es.Start.ToShortTimeString() - @es.End.ToShortTimeString()</span>
                                                
                                                
                                                @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                                                {
                                                    if (@es.AvailableSeats <= 0)
                                                    {
                                                    <p style="color:#CB0019;font-family:'Lobster', Cursive;font-size:17px;display:inline;margin-right:38px;margin-left:38px;">   SoldOut    </p>
                                                    }
                                                    else
                                                    {
                                                    <span>@es.AvailableSeats / @es.Guests available</span>
                                                    }
                                                    <span>@es.ReservedSeats Reserved</span>
                                                    
                                                    if (@es.IsDefault)
                                                    {
                                                        <span style="color:#FF3300;font-family:'Lobster', Cursive;font-size:16px;float:right;" id="seat-@seatingCnt">  Main Seating</span>
                                                    }
                                                    else
                                                    {
                                                        <span id="seat-@seatingCnt"></span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span>Total @es.Guests Seats</span>
                                                    if (@es.AvailableSeats <= 0)
                                                    {
                                                        <p style="color:#CB0019;font-family:'Lobster', Cursive;font-size:17px;display:inline;margin-right:38px;margin-left:38px;">    SoldOut    </p>                                                        
                                                    }
                                                }
                                            </span>
                                            <br />   
                                                seatingCnt++;
                                    }
                                    @if (Model.TotalNumberOfAvailableSeats <= 0)
                                    {
                                        <input type="button" class="button medium green" value="Add Me to Waiting List" onclick="PutOnWaitList();" style="float:right;" />
                                    }
                                </div>
                            }
                            <meta itemprop="startDate" content="@Html.Raw(Model.Start.ToString("yyyy-MM-ddThh:mm"))"/> 
                                                        
                        <div class="editor field">
                            @if (!Model.MultiSeating)
                            {
                                <p>(You can't change the time and duration because we've started selling tickets)</p>
                            }
                            else
                            {
                                <br />
                                <a id="btnCreateSeating" href="#" class="button medium yellow" style="float:left">Add Seating</a>
                                if (SupperClub.Code.UserMethods.IsAdmin)
                                {
                                    <a id="btnEditSeating" href="#" class="button medium yellow" style="float:left">Edit Seatings</a>                                    
                                }
                                else if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                                {
                                    <a id="btnEditHostSeating" href="#" class="button medium yellow" style="float:left">Edit Seatings</a>                                    
                                }
                                <a id="btnCancelCreateSeating" href="#" class="button medium yellow" style="float:left">Cancel</a> 
                                
                                <br /><br />
                                <div id="dialog-form" style="float:left;width:600px;margin-bottom:20px;">                                    
                                    <table id="fs_seating" style="border:1px solid #e2e2e2;float:left;">
                                        <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                            <tr>
                                                <th style="width:50px;border:1px solid #e2e2e2;vertical-align:middle;">Choose Main Seating</th>
                                                <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Seating Time</th>
                                                <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Total guests</th>
                                                <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Reserved Seats</th>
                                                <th style="width:50px;border:1px solid #e2e2e2;vertical-align:middle;">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody style="border:1px solid #e2e2e2;">
                                           <tr class="rowSeat" style="height:35px !important;" id="row1">
                                                <td style="border:1px solid #e2e2e2;width:30px;vertical-align:top;padding-top:10px;" align="center"><input type="radio" id="defaultSeating" value="1" style="width:30px;"/></td>
                                                <td style="border:1px solid #e2e2e2;width:150px;" align="center"><input type="text" id="timepicker_start" class="timepickernew" style="width:120px;" /></td>
                                                <td style="border:1px solid #e2e2e2;width:150px;" align="center"><input type="text" id="guestsMulti" value="" class="positive-integer-only" style="width:120px;" /></td>
                                                <td style="border:1px solid #e2e2e2;width:150px;" align="center"><input type="text" id="reservedSeatsMulti" value="" class="positive-integer-only" style="width:120px;" /></td>                                     
                                                <td class="action" style="border:1px solid #e2e2e2;vertical-align:top;padding-top:7px;"><a id="btnAdd" href="#" class="button medium yellow">Add</a></td>
                                            </tr>             
                                        </tbody>
                                    </table>       
                                </div>
                                if (SupperClub.Code.UserMethods.IsAdmin)
                                {
                                    <div id="edit-seating">
                                     <table id="tbl_edit_seating" style="border:1px solid #e2e2e2;float:left;margin-bottom:20px;">
                                            <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                                <tr>
                                                    <th style="width:50px;border:1px solid #e2e2e2;vertical-align:middle;">Select Main Seating</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Seating Time</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Total guests</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Reserved Seats</th>                                                
                                                </tr>
                                            </thead>
                                            <tbody style="border:1px solid #e2e2e2;">
                                            </tbody>
                                        </table> 
                                    </div>
                                }
                                if (!SupperClub.Code.UserMethods.IsAdmin && SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                                {
                                    <div id="edit-seating-host">
                                     <table id="tbl_edit_host_seating" style="border:1px solid #e2e2e2;float:left;margin-bottom:20px;">
                                            <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                                <tr>
                                                    <th style="width:50px;border:1px solid #e2e2e2;vertical-align:middle;">Select Main Seating</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Seating Time</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Total guests</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Reserved Seats</th>                                                
                                                </tr>
                                            </thead>
                                            <tbody style="border:1px solid #e2e2e2;">
                                            </tbody>
                                        </table> 
                                    </div>
                                }
                            }
                        </div>
                        </div>
                        <div class="details-column">
                            
                            
                            @Html.ValidationMessageFor(m => m.Description)
                            <div class="display field">
                                @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 0 && ViewBag.EventDescriptionList[0] != null)
                                {
                                    if (ViewBag.EventDescriptionList.Length > 1)
                                    {
                                        <h5> What makes your experience unique? Why is it different to going to a restaurant? * (Minimum: 5 words, Maximum: 50 words) </h5>
                                    }
                                    else
                                    {
                                        <h5>Why Join the Table?</h5>
                                    }  
                                    @Html.Raw("<p><span itemprop=\"description\">" + ViewBag.EventDescriptionList[0].Replace("\r\n", "<br />").Replace("\n", "<br />") + "</span></p>")
                                }
                                @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 1 && ViewBag.EventDescriptionList[1] != null)
                                {
                                    <div>
                                        <h5>Is there anything you can tell us about the menu? A special recipe that you learnt from a mysterious person on your travels? Or maybe an interesting story behind the local producer who supplies you the ingredients * (Minimum: 5 words, Maximum:50 words)</h5>
                                        <p>@ViewBag.EventDescriptionList[1]</p>
                                    </div>
                                }
                                @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 2 && ViewBag.EventDescriptionList[2] != null)
                                {
                                    <div>
                                        <h5>Tell us about your venue.Does it have a unique history? Perhaps it was used for something unusual? Perhaps an interesting story you have about the owners now or in the past * (Minimum: 5 words, Maximum:50 words)</h5>
                                        <p>@ViewBag.EventDescriptionList[2]</p>
                                    </div>
                                }
                                @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 3 && ViewBag.EventDescriptionList[3] != null)
                                {
                                    <div>
                                        <h5>How would you describe the vibe of your event? * (Minimum: 5 words, Maximum:50 words)</h5>
                                        <p>@ViewBag.EventDescriptionList[3]</p>
                                    </div>
                                }
                            </div>
                           <div class="editor field">                               
                            @Html.HiddenFor(m => m.Description)
                            @Html.HiddenFor(m => m.EventDescription)
                            <div class="field">
                                @if(ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 0 && ViewBag.EventDescriptionList[0] != null)
                                {
                                    if (ViewBag.EventDescriptionList.Length > 1)
                                    {
                                        <p> What makes your experience unique? Why is it different to going to a restaurant? (Minimum: 5 words, Maximum: 50 words) </p>
                                    }
                                    else
                                    {
                                            @Html.LabelFor(m => m.Description)       
                                    }
                                    <textarea class="counter">@ViewBag.EventDescriptionList[0]</textarea>
                                }
                            </div>
                            @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 1 && ViewBag.EventDescriptionList[1] != null)
                            {
                                <br /><div class="field">
                                    <p>Is there anything you can tell us about the menu? A special recipe that you learnt from a mysterious person on your travels? Or maybe an interesting story behind the local producer who supplies you the ingredients(Minimum: 5 words, Maximum:50 words)</p>
                                    <textarea class="counter1" rows="3" cols="50">@ViewBag.EventDescriptionList[1]</textarea>
                                </div>
                            }
                            @if(ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 2 && ViewBag.EventDescriptionList[2] != null)
                            {
                                <br/>
                                <div class="field">
                                    <p>Tell us about your venue.Does it have a unique history? Perhaps it was used for something unusual? Perhaps an interesting story you have about the owners now or in the past(Minimum: 5 words, Maximum:50 words)</p>
                                    <textarea class="counter2" rows="3" cols="50">@ViewBag.EventDescriptionList[2]</textarea>
                                </div>
                           }
                            @if (ViewBag.EventDescriptionList != null && ViewBag.EventDescriptionList.Length > 3 && ViewBag.EventDescriptionList[3] != null)
                            {
                                <br /> <div class="field">
                                    <p>How would you describe the vibe of your event? (Minimum: 5 words, Maximum:50 words)</p>
                                    <textarea class="counter3" rows="3" cols="50">@ViewBag.EventDescriptionList[3]</textarea>
                                </div>
                            }
                          </div>
                        </div>
                        <div class="details-column">
                            <h5>Commission</h5>

                            @Html.ValidationMessageFor(m => m.Commission)
                            <div class="display field">
                                @Html.DisplayFor(m => m.Commission)
                            @if(!SupperClub.Code.UserMethods.IsAdmin)
                            {
                                @Html.HiddenFor(m => m.Commission)
                            }
                            </div>
                            
                            <div class="editor field">
                                @if (SupperClub.Code.UserMethods.IsAdmin)
                                {
                                            @Html.EditorFor(m => m.Commission)
                                }    
                                else
                                { 
                                    @Html.DisplayFor(m => m.Commission, new { @readonly = "readonly" })
                                }
                            </div>
                        </div>

                        @if (Model.Start > DateTime.Now  || SupperClub.Code.UserMethods.IsAdmin)
                        {
                       <div itemprop="offers" itemscope itemtype="https://schema.org/AggregateOffer">
                                <div class="details-column">
                                @Html.HiddenFor(m => m.Cost)
                                @if (!Model.MultiMenuOption)
                                {
                                    <h5>Cost</h5>
                                    @Html.ValidationMessageFor(m => m.CostTextDisplay)
                                    @*<div class="display field important-copy">
                                        <p><span itemprop="lowPrice">@Html.DisplayFor(m => m.CostToGuest,@Model.Commission)</span></p>
                                    </div>*@
                                    <div class="display field">
                                        <table>
                                            <tr>
                                                <td>@Html.LabelFor(m => m.CostTextDisplay)</td>
                                                <td style="font-size:12px;"><b>Commission</b></td>
                                                <td>&nbsp;&nbsp;&nbsp;</td>
                                                <td style="font-size:12px;"><b>GuestPrice (Please ensure the Guest ticket price (inc. booking fee) is consistent if tickets are being sold elsewhere.)</b></td>
                                            </tr>
                                            <tr class="important-copy">
                                                <td>@Html.DisplayFor(m => m.CostTextDisplay)</td>
                                                <td><span class="CommissionText">+   @Model.Commission% =</span></td>
                                                <td>&nbsp;&nbsp;&nbsp;</td>
                                                <td>
                                                    @*<input type="text" id="CostToGuest" name="GuestPrice" />*@
                                                    <label id="lblGuest"></label>
                                                </td>

                                            </tr>
                                        </table>
                                        </div>

                                    <div class="editor field">
                                    <span>
                                        Grub Club will add <span id="lblCommission">@Model.Commission</span>% commission


                                        @*@System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionPercent"]% commission
                                            @if (System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionFixed"] != "0")
                                            {
                                                @:and £@System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionFixed"]
                                            }*@
                                        to the price per ticket for guests
                                    </span>
                                    @*@Html.EditorFor(m => m.CostTextDisplay)
                                        @Html.HiddenFor(m => m.Cost)*@

                                    <div class="field">
                                        <table>
                                            <tr>
                                                <td>@Html.LabelFor(m => m.CostTextDisplay)</td>
                                                <td style="font-size:12px;"><b>Commission</b></td>
                                                <td>&nbsp;&nbsp;&nbsp;</td>
                                                <td style="font-size:12px;"><b>GuestPrice (Please ensure the Guest ticket price (inc. booking fee) is consistent if tickets are being sold elsewhere.)</b></td>
                                            </tr>
                                            <tr>
                                                <td>@Html.EditorFor(m => m.CostTextDisplay) </td>
                                                <td>+<span class="CommissionText"> @Model.Commission  </span> % = </td>
                                                <td>&nbsp;&nbsp;&nbsp;</td>
                                                <td>
                                                    @*<input type="text" id="CostToGuest" name="GuestPrice" />*@
                                                    <label id="lblGuestEdit" ></label>
                                                </td>

                                            </tr>
                                        </table>
                                    </div>
                                </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m.CostTextDisplay)
                                    <h5>Menu Options</h5>
                                    var menuCnt = 1;
                                    <div id="multiMenuListing">
                                        @foreach (SupperClub.Domain.EventMenuOption emo in Model.EventMenuOptions)
                                        { 
                                                <ul class="menuMulti1" style="list-style-type: none;">  
                                                    @if (Model.EventMenuOptions.Count > 1)
                                                    {
                                                        <li style="font-weight:bold;">Option @menuCnt:</li>    
                                                    }                                
                                                    <li style="display:inline;padding-right:15px;">  @emo.Title</li>
                                                    <li style="font-weight:bold;color:#FF3300; display:inline;padding-right:15px;"> £@SupperClub.Domain.CostCalculator.CostToGuest(@emo.Cost,@Model.Commission)</li>
                                                    @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                                                    {
                                                        if (@emo.IsDefault)
                                                        {
                                                            <li style="color:#FF3300;font-family:'Lobster', Cursive;font-size:16px;display:inline;" id="menu-@menuCnt">Main Menu Option</li>
                                                        }
                                                        else
                                                        {
                                                            <li style="display:inline;" id="menu-@menuCnt"></li>
                                                        }
                                                    }                                                    
                                                    <li>  @emo.Description</li>
                                                    
                                                </ul>
                                                <br />   
                                                    menuCnt++;
                                        }
                                    </div>
                                    <div class="editor field">
                                        <br />
                                        <a id="btnCreateMenu" href="#" class="button medium yellow" style="float:left">Add Menu Option</a>                                        
                                        @if (SupperClub.Code.UserMethods.IsAdmin || SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                                        {
                                            <a id="btnEditMenu" href="#" class="button medium yellow" style="float:left">Edit Menu</a>                                            
                                        }
                                        <a id="btnCancelCreateMenu" href="#" class="button medium yellow" style="float:left">Cancel</a>
                                        <br /><br /> <span style="float:left;">   Grub Club will add a @System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionPercent"]% commission 
                                        @if (System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionFixed"] != "0")
                                        {
                                            @:and £@System.Web.Configuration.WebConfigurationManager.AppSettings["CommissionFixed"] 
                                        }
                                        to the price per ticket for guests</span>                                    
                                        <br /><br />
                                        <div id="dialog-form-menu" style="float:left;">
                                          <table id="fs_menu" style="float:left;border:1px solid #e2e2e2;margin-bottom:20px;">
                                            <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                                <tr>
                                                    <th style="width:30px;border:1px solid #e2e2e2;vertical-align:middle;">Choose Main Option</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Title</th>
                                                    <th style="width:180px;border:1px solid #e2e2e2;vertical-align:middle;">Description</th>
                                                    <th style="width:70px;border:1px solid #e2e2e2;vertical-align:middle;">Cost</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Commission</th>
                                                    <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">CosttoGuest</th>

                                                    <th style="width:30px;border:1px solid #e2e2e2;vertical-align:middle;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody style="border:1px solid #e2e2e2;">
                                               <tr class="rowMenu" style="height:35px !important;">
                                                    <td style="border:1px solid #e2e2e2;width:30px;vertical-align:top;padding-top:10px;" align="center"><input type="radio" id="defaultMenu" value="1" style="width:30px;"/></td>
                                                    <td style="border:1px solid #e2e2e2;width:150px;vertical-align:middle;float:left;padding-left:3px;" align="center"><textarea name="titleMulti" id="menuTitle" class="restrictLength" style="width:120px;height:50px;float:left;"></textarea></td>
                                                    <td style="border:1px solid #e2e2e2;width:180px;vertical-align:middle;padding-left:3px;" align="center"><textarea name="descriptionMulti" id="menuDescription" value="" class="description" style="width:150px;height:50px;float:left;margin-left:0px;padding-left:0px;"></textarea></td>
                                                    <td style="border:1px solid #e2e2e2;width:70px;vertical-align:middle;" align="center"><input type="text" name="costMulti" id="menuCost" value="" class="positive" style="width:50px;" /></td>                                     
                                                   <td style="border:1px solid #e2e2e2;width:150px;vertical-align:middle;" align="center">+<span class="CommissionText">   @Model.Commission</span>% =</td>
                                                   <td style="border:1px solid #e2e2e2;width:150px;vertical-align:middle;" align="center"><label id="menuGuestPrice"> </label></td>
 
                                                   <td class="action" style="border:1px solid #e2e2e2;vertical-align:middle;"><a id="btnAddMenu" href="#" class="button medium blue" style="float:left;display:block; width:30px;">Add</a></td>
                                                </tr>             
                                            </tbody>
                                          </table>    
                                        </div>
                                        @if (SupperClub.Code.UserMethods.IsAdmin || SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                                        {
                                            <div id="edit-menu">
                                             <table id="tbl_edit_menu" style="border:1px solid #e2e2e2;float:left;margin-bottom:20px;">
                                                    <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                                        <tr>
                                                            <th style="width:30px;border:1px solid #e2e2e2;vertical-align:middle;">Choose Main Option</th>
                                                            <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Title</th>
                                                            <th style="width:180px;border:1px solid #e2e2e2;vertical-align:middle;">Description</th>
                                                            <th style="width:70px;border:1px solid #e2e2e2;vertical-align:middle;">Cost</th>  
                                                            <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">Commission</th>
                                                            <th style="width:150px;border:1px solid #e2e2e2;vertical-align:middle;">CosttoGuest</th>                                            
                                                        </tr>
                                                    </thead>
                                                    <tbody style="border:1px solid #e2e2e2;">
                                                    </tbody>
                                                </table> 
                                            </div>
                                            <br/>
                                        }
                                    </div>
                                    <br />
                                }
                                </div>

                                <div class="details-column">
                                    
                                    @if (!Model.MultiSeating)
                                    {
                                        if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            <h5>Seats Available</h5>
                                            @Html.ValidationMessageFor(m => m.Guests)
                                            <div class="display field">
                                                <p>@Html.Raw(ViewBag.AvailableSeats + " / " + "<span itemprop=\"offerCount\">" + Model.Guests.ToString() + "</span>" + " available")</p>
                                            </div>
                                        }
                                        else
                                        {
                                            <h5>Total Seats</h5>
                                            @Html.ValidationMessageFor(m => m.Guests)
                                            <div class="display field">
                                                <p>@Html.Raw("<span itemprop=\"offerCount\">" + Model.Guests.ToString() + "</span>")</p>
                                            </div>
                                        }
                                        <div class="editor field">
                                            @Html.EditorFor(m => m.Guests)
                                        </div>
                                        
                                    }
                                    else
                                    { 
                                        @Html.HiddenFor(m => m.Guests) 
                                        if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            <div class="display field">
                                                <h5>Seats Available</h5>
                                                <p>@Html.Raw(ViewBag.AvailableSeats + " / " + "<span itemprop=\"offerCount\">" + Model.TotalEventGuests.ToString() + "</span>" + " available")</p>
                                            </div>
                                        }
                                        else
                                        {                                                                              
                                            <div class="display field">
                                                <h5>Capacity per Seating</h5>
                                                <p>@Html.Raw("<span itemprop=\"offerCount\">" + Model.Guests.ToString() + "</span>")</p>
                                            </div>
                                        }
                                    }
                                </div>                           
                            </div>
                                    if (!Model.MultiSeating && (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin))
                                    {    
                                        <div class="details-column">
                                            <h5>Reserved Seats</h5>
                                            @Html.ValidationMessageFor(m => m.ReservedSeats)
                                            <div class="display field" style="margin-bottom:10px;">
                                                @Html.DisplayFor(m => m.ReservedSeats)

                                            </div>
                                            <div class="editor field">                                           
                                                @Html.EditorFor(m => m.ReservedSeats)
                                            </div>
                                        </div>
                            
                                    }
                                    else
                                    {
                                        @Html.HiddenFor(m => m.ReservedSeats)   
                                    }

                            <div class="details-column">
                                <h5>House Rules</h5>
                                @Html.ValidationMessageFor(m => m.HouseRule)
                                <div class="display field">
                                    <p>@Html.DisplayWithBreaksFor(m => m.HouseRule)</p>
                                </div>
                                <div class="editor field">
                                    @Html.EditorFor(m => m.HouseRule)
                                </div>
                            </div>
                                    @Html.HiddenFor(m => m.Id)
                                    if (!SupperClub.Code.UserMethods.IsAdmin)
                                    {
                                    @Html.HiddenFor(m => m.Name)
                                    @Html.HiddenFor(m => m.Start)
                                    @Html.HiddenFor(m => m.StartTime)
                                    @Html.HiddenFor(m => m.Duration)
                                    @Html.HiddenFor(m => m.SupperClubId)
                                    }
                                    else
                                    {
                                <div class="details-column">
                                    @Html.ValidationMessageFor(m => m.Name)
                                    <div class="display field" style="display:none">
                                        @Html.DisplayFor(m => m.Name)
                                    </div>
                                    <div class="editor field">
                                        <h5>Event Name</h5>                                
                                        @Html.EditorFor(m => m.Name)
                                    </div>
                                </div>        
                                
                                <div class="details-column">
                                    <div class="display field" style="display:none">
                                        <p>@Html.DisplayFor(m => m.SupperClub.Name)</p>
                                    </div>
                                    <div class="editor field">
                                        <h5>Hosted By</h5>                                
                                        @Html.DropDownList("SupperclubDL", (SelectList)ViewBag.SupperClubs, Model.SupperClub.Name, new { @class = "custom_select" })
                                        @Html.HiddenFor(m => m.SupperClubId)
                                    </div>
                                </div>
                                                       
                                <div class="details-column">
                                    @Html.ValidationMessageFor(m => m.Start)
                                    <div class="display field" style="display:none">
                                        <p>@Html.DisplayFor(m => m.Start)</p>
                                    </div>
                                    <div class="editor field">
                                        <h5>Start Date</h5>                                
                                        @Html.EditorFor(m => m.Start, "DatePicker")
                                    </div>
                                </div>     
                                
                                        if (!@Model.MultiSeating)
                                        {                  
                                            <div class="details-column">                                
                                                @Html.ValidationMessageFor(m => m.Start)
                                                <div class="display field" style="display:none">
                                                    <p>@Html.DisplayFor(m => m.Start)</p>
                                                </div>
                                                <div class="editor field">
                                                    <h5>Start Time</h5>
                                                    @Html.EditorFor(m => m.StartTime, "TimePicker")
                                                </div>
                                            </div> 
                                        }
                                        else
                                        {
                                            @Html.HiddenFor(m => m.StartTime);
                                        }
                            
                                <div class="details-column">
                                    @Html.ValidationMessageFor(m => m.Duration)
                                    <div class="display field" style="display:none">
                                        <p>@Html.DisplayFor(m => m.Duration)</p>
                                    </div>
                                    <div class="editor field">
                                        <h5>Duration</h5>                                
                                        @Html.EditorFor(m => m.Duration)
                                    </div>
                                </div> 
                                    }
                        }
                        else
                        {
                             <div class="comments-box" itemprop="review" itemscope itemtype="https://schema.org/Review">
                                    @Html.HiddenFor(m => m.Name)
                                    @Html.HiddenFor(m => m.Start)
                                    @Html.HiddenFor(m => m.StartTime)
                                    @Html.HiddenFor(m => m.Duration)
                                    @Html.HiddenFor(m => m.SupperClubId)
                                    @Html.HiddenFor(m => m.CostTextDisplay)
                            <h2>What are Your Friends Saying?</h2>
                            
                            @if (Model.Reviews.Count == 0)
                            {
                                @:None yet, be the first to leave one!
                                <br /><br />
                            }

                            @foreach (SupperClub.Domain.Review review in Model.Reviews.OrderByDescending(x => x.DateCreated))
                            {
                                if (review.Publish)
                                {
                                <div class="details-column">
                                    <h5><span itemprop="name">@review.Title</span></h5>
                                    <span class="user-block">
                                        @if (review.UserId == null || review.Anonymous)
                                        {
                                            <span itemprop="author">Guest</span>
                                        }
                                        else
                                        {
                                            <span itemprop="author">@(string.IsNullOrEmpty(review.User.FirstName) ? "Guest" : review.User.FirstName)</span>
                                        }
                                        @Html.Raw(" | ")
                                        <meta itemprop="datePublished" content="@Html.Raw(review.DateCreated.ToString("yyyy-MM-ddThh:mm"))">@review.DateCreated.ToString("ddd, d MMM yyyy")
                                        @if (review.UserId != null && review.UserId == SupperClub.Code.UserMethods.UserId)
                                        {
                                            @Html.Raw(" | ")
                                            <a href="@Url.Action("EditReview", "Event", new { eventId = Model.Id })">(edit)</a>
                                        }
                                    </span>
                                    <div class="comment-copy">
                                        <p><span itemprop="description">@Html.DisplayWithBreaks(review.PublicReview)</span></p>
                                    </div>
                                    @if (review.HostResponse != null && review.HostResponse.Length > 0)
                                    {
                                        <span class="host-block">
                                        <span>Response from our Host</span>
                                        @Html.Raw(" | ")
                                        @review.HostResponseDate.ToString("ddd, d MMM yyyy")
                                        @if (Model.SupperClub.UserId == SupperClub.Code.UserMethods.UserId)
                                        {
                                            @Html.Raw(" | ")
                                            <a href="@Url.Action("EditReviewResponse", "Event", new { eventId = review.EventId, reviewId = review.Id })">(edit)</a>
                                        }
                                    </span>
                                    <div class="comment-response">
                                        <p><span>@Html.DisplayWithBreaks(review.HostResponse)</span></p>
                                    </div>
                                    }
                                    else
                                    {
                                        if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId)
                                        {
                                            <a href="@Url.Action("EditReviewResponse", "Event", new { eventId = review.EventId, reviewId = review.Id })">Respond to Guest</a>
                                        }
                                    }
                                    @if (review.AdminResponse != null && review.AdminResponse.Length > 0)
                                    {
                                        <span class="gc-block">
                                        <span>Response from Grubclub</span>
                                        @Html.Raw(" | ")
                                        @review.AdminResponseDate.ToString("ddd, d MMM yyyy")
                                        @if (SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            @Html.Raw(" | ")
                                            <a href="@Url.Action("EditReviewResponse", "Event", new { eventId = review.EventId, reviewId = review.Id })">(edit)</a>
                                        }
                                    </span>
                                    <div class="comment-response">
                                        <p><span>@Html.DisplayWithBreaks(review.AdminResponse)</span></p>
                                    </div>
                                    }
                                    else
                                    {
                                        if (SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            <a href="@Url.Action("EditReviewResponse", "Event", new { eventId = review.EventId, reviewId = review.Id })">Respond to Guest</a>
                                        }
                                    }
                                </div>
                                }
                            }
                            
                            <a class="button medium orange" href="@Url.Action("AddReview", "Event", new { eventId = Model.Id })" style="float:left">Add Review</a>

                            @* Pagination to be implemented
                            <div class="pagination">
                                <a href="" class="page-on">1</a>
                                <a href="">2</a>
                                <a href="">3</a>
                                <a href="">4</a>
                                <a href="">5</a>
                                <a href="">next</a>
                            </div>
                            *@
                        </div>

                        }
                    </div>
                                    
                    <div class="tab-content" id="tab2">
                        <div class="details-column">
                            <h5>Cuisine</h5>
                            @Html.ValidationMessageFor(m => m.Cuisines)
                            <div class="display field">
                                <p>@Html.DisplayFor(m => m.Cuisines)</p>
                            </div>
                            <div class="editor field">
                                @Html.DropDownList("CuisinesDL", (SelectList)ViewBag.Cuisines, "- Select Cuisine -", new { @class = "custom_select" })
                                @Html.EditorFor(m => m.Cuisines) <button id="ClearCuisine" type="button" style="border:none !important; display:inline !important; background:none;color:blue;text-decoration: underline; padding-bottom:10px;">Clear Cuisine Text</button>

                            </div>
                        </div>
                        
                        <div class="details-column">
                            <h5>Specific Diets</h5>
                            @Html.ValidationMessageFor(m => m.Diets)
                            <div class="display field">                                
                                @if (Model.EventDiets != null && Model.EventDiets.Count > 0)
                                {
                                    <ul class="arrow_list">                                    
                                        @foreach (SupperClub.Domain.EventDiet s in @Model.EventDiets.Where(ed => ed.Diet.DietTypeId == (int)SupperClub.Domain.DietType.Diet))
                                        {                                        
                                            <li> @Html.Raw(s.Diet.Name) Friendly</li>    
                                        }                                   
                                    </ul>
                                        var ad = (from d in @Model.EventDiets where (d.Diet.DietTypeId == (int)SupperClub.Domain.DietType.Allergy || d.Diet.DietTypeId == (int)SupperClub.Domain.DietType.Others) select d).ToList();

                                        if (ad != null && ad.Count > 0)
                                        {
                                        <h5>The chef can cater for the following allergies</h5>
                                        <ul class="arrow_list">                                    
                                            @foreach (SupperClub.Domain.EventDiet s in ad)
                                            {                                        
                                                <li> @Html.Raw(s.Diet.Name)</li>    
                                            }                                   
                                        </ul>
                                        }
                                    <p style="color:red;">*Please mention your specific requirements during booking. Specific diet requirements need advance notice to chefs.</p>                                    
                                }
                            </div>
                            <div class="editor field">
                               @Html.ValidationMessageFor(m => m.Diets)
                            <p>Do you cater for the following requirements?</p>
                            @*Small hack to change Diets from tag cloud to checkboxes. Will probably be changed back in future.
                              Javascript on submit fills the hidden Diets field back with a string*@
                            @foreach (SupperClub.Domain.Diet d in ViewBag.StandardDiets)
                            {
                                @Html.CheckBox(d.Name, (Model.Diets.Contains(d.Name + "|" + d.DietTypeId.ToString())), new { style = "width:20px;", @class = "dietCB" })
                                @d.Name
                                <br />
                            }
                            <p>Do you cater to people with any of the allergies mentioned below?</p>
                            <table>
                           @foreach (SupperClub.Domain.Diet _d in ViewBag.AllergyDiets)
                           {
                                <tr>
                                    <td> @_d.Name</td>
                                    <td>
                                        @if (Model.SelectedDietIds.Contains(_d.Id))
                                        {
                                            <input type="radio" name="@_d.Name" value="@_d.Id" id='@_d.Id' title="Yes" checked="checked" style="width:20px;" />
                                        }
                                        else
                                        {
                                            <input type="radio" name="@_d.Name" value="@_d.Id" id='@_d.Id' title="Yes" style="width:20px;" />
                                        }
                                        Yes
                                    </td>
                                    <td style="margin-left:30px;">
                                        @if (Model.SelectedDietIds.Contains(_d.Id))
                                        {
                                        <input type="radio" name="@_d.Name" value="@_d.Id" id='no @_d.Name' title="No" style="width:20px;margin-left:30px;" />
                                        }
                                        else
                                        {
                                            <input type="radio" name="@_d.Name" value="@_d.Id" id='no @_d.Name' title="No" checked="checked" style="width:20px;margin-left:30px;" />
                                        }
                                        No    
                                    </td>                           
                               </tr>
                           }
                            </table>
                            <p>If you can cater specifically to any other allergy, please mention it below</p>
                            <input type="text" id="txtOtherAllergy" maxlength="500" />
                            @Html.HiddenFor(m => m.Diets)
                            </div>
                        </div>

                        <div class="details-column">
                            <h5>Menu</h5>
                            @Html.ValidationMessageFor(m => m.Menu)
                            <div class="display field">
                                <!-- Split on new line -->
                                <ul class="arrow_list">
                                @foreach (string s in Model.Menu.Split('*'))
                                {
                                    <li> @Html.Raw(@s.Trim())</li>    
                                }
                                </ul>
                            </div>
                            <div class="editor field">
                                <p>(Remember put a * between courses to create a list!)</p>
                                @Html.EditorFor(m => m.Menu)
                            </div>
                        </div>

                        @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                        {
                            <div class="details-column">                         
                             <h5>Tags</h5>
                                @Html.HiddenFor(m => m.EventTagList) 
                                @Html.HiddenFor(m => m.SelectedTagIds)                                
                                <div class="display field">
                                    <ul class="arrow_list">
                                    @foreach (SupperClub.Domain.EventTag et in @Model.EventTags)
                                    {
                                       <li>@et.Tag.Name </li>
                                    }
                                    </ul>
                                </div> 
                                <div class="editor field" style="min-width:600px;">
                                    <select class="searchable" multiple="multiple" id="searchableTag">
                                        @foreach (SupperClub.Domain.Tag t in ViewBag.Tags)
                                {
                                    if (@Model.SelectedTagIds.Contains(t.Id))
                                    {
                                        <option value="@t.Id" selected="selected">@t.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@t.Id">@t.Name</option>
                                    }
                                }
                                    </select>  
                                <br />                        
                            
                            </div>
                            </div>

                           
                        }
                        @if (SupperClub.Code.UserMethods.IsAdmin)
                        {
                            <div class="details-column">
                                <h5>City</h5>
                                @Html.HiddenFor(m => m.EventCityList)
                                <div class="display field">
                                    <ul class="arrow_list">
                                        @foreach (SupperClub.Domain.EventCity ec in @Model.EventCities)
                                                            {
                                            <li>@ec.City.Name </li>
                                                            }
                                    </ul>
                                </div>
                                <div class="editor field" style="min-width:600px;">
                                    <select class="searchable" multiple="multiple" id="searchableCity">
                                        @foreach (SupperClub.Domain.City c in ViewBag.Cities)
                                        {
                                            if (@Model.SelectedCityIds.Contains(c.Id))
                                            {
                                                <option value="@c.Id" selected="selected">@c.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@c.Id">@c.Name</option>
                                            }
                                        }
                                    </select>
                                    <br />

                                </div>
                            </div>
                            <div class="details-column">
                                <h5>Areas</h5>
                                @Html.HiddenFor(m => m.EventAreaList)
                                <div class="display field">
                                    <ul class="arrow_list">
                                        @foreach (SupperClub.Domain.EventArea ea in @Model.EventAreas)
                                                                                    {
                                            <li>@ea.Area.Name </li>
                                                                                    }
                                    </ul>
                                </div>
                                <div class="editor field" style="min-width:600px;">
                                    <select class="searchable" multiple="multiple" id="searchableArea">
                                        @foreach (SupperClub.Domain.Area a in ViewBag.Areas)
                                        {
                                            if (@Model.SelectedAreaIds.Contains(a.Id))
                                            {
                                                <option value="@a.Id" selected="selected">@a.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@a.Id">@a.Name</option>
                                            }
                                        }
                                    </select>
                                    <br />

                                </div>
                            </div>
                        }
                    </div>

                    <div class="tab-content" id="tab3">
                        <div class="display field check-box-field">
                            @Html.DisplayFor(m => m.Alcohol)
                            @Html.LabelFor(m => m.Alcohol)
                        </div>
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.Alcohol)
                            @Html.LabelFor(m => m.Alcohol)
                            @Html.ValidationMessageFor(m => m.Alcohol)
                        </div>
                        <br />
                        <div class="display field check-box-field">
                            @Html.DisplayFor(m => m.Charity)
                            @Html.LabelFor(m => m.Charity)
                        </div>
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.Charity)
                            @Html.LabelFor(m => m.Charity)
                            @Html.ValidationMessageFor(m => m.Charity)
                        </div>
                        @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                        {
                            <br />
                            <div class="display field check-box-field">
                                @Html.DisplayFor(m => m.Private)
                                @Html.LabelFor(m => m.Private)
                            </div>
                            <div class="editor field check-box-field">
                                @Html.EditorFor(m => m.Private)
                                @Html.LabelFor(m => m.Private)
                                @Html.ValidationMessageFor(m => m.Private)
                            </div>                        
                            <br />
                            <div class="display field check-box-field">
                                @Html.DisplayFor(m => m.WalkIn)
                                @Html.LabelFor(m => m.WalkIn)
                            </div>
                            <div class="editor field check-box-field">
                                @Html.EditorFor(m => m.WalkIn)
                                @Html.LabelFor(m => m.WalkIn)
                                @Html.ValidationMessageFor(m => m.WalkIn)
                            </div>
                            <br />
                            <div class="display field check-box-field">
                                @Html.DisplayFor(m => m.ContactNumberRequired)
                                @Html.LabelFor(m => m.ContactNumberRequired)
                            </div>
                            <div class="editor field check-box-field">
                                @Html.EditorFor(m => m.ContactNumberRequired)
                                @Html.LabelFor(m => m.ContactNumberRequired)
                                @Html.ValidationMessageFor(m => m.ContactNumberRequired)
                            </div>
                        }
                    </div>                    
                    @if (SupperClub.Code.UserMethods.UserId == Model.SupperClub.UserId || SupperClub.Code.UserMethods.IsAdmin)
                    {
                        var blank = "";
                        <div class="tab-content" id="tab4">                            
                            <div class="imageEdit">
                                <p>The very last picture you upload will be the one displayed on our Search Listings, so make sure it's your favourite one! You can change this at any point.</p>
                                <p>Total size of the pictures being uploaded should not exceed 7MB at once. You can add more pictures after finishing first upload!</p>
                                @Html.HiddenFor(m => m.ImagePaths)  
                                <input type="hidden" id="editedId" value="" />
                                <input type="hidden" id="editedOldId" value="" />
                                <h3>Step 1: Select the pictures</h3>
                                <input id="avatar" type="file" name="avatar" multiple style="margin-bottom:10px;" />

                                <h3 style="padding-top:12px;">Step 2: Upload your pictures</h3>
                                <button id="btnImgUpload" class="button medium orange" value="Upload">Upload</button>
                                <div id="demoIn" class="demo-bar"></div>

                                <div id="divImgEdit" style="float:left;padding-top:12px;">
                                    <h3>Step 3: Edit your pictures</h3>
                                    <div style="color:red;font-weight:bold;text-align:left;">
                                        To ensure pictures look great on the site,
                                        <ul class="links-list-red"> 
                                            <li> Press "Edit your picture"</li>
                                            <li>Select "Crop"</li>
                                            <li>Select the "6:4" option to crop your image to the correct size.</li>
                                            <li>Click "Apply" and then</li>
                                            <li>Click on "Save"</li>
                                        </ul>
                                    </div>
                                    <table id="tblImgList" class="tblImgList-table">
                                        <thead>
                                            <tr>
                                                <th style="display:none;">ImageId</th>
                                                <th style="display:none;">ImagePathFull</th>
                                                <th style="border:1px solid #e2e2e2;">Image</th>
                                                <th style="border:1px solid #e2e2e2;">Edit</th>
                                                <th style="border:1px solid #e2e2e2;">Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.EventImages.Count > 0)
                                                {
                                                   foreach (SupperClub.Domain.EventImage ei in Model.EventImages)
                                                   {
                                                    <tr class="rowImgDetails" style="border:1px solid #e2e2e2;" id="row_@(ei.ImagePath.Substring(0,36))">
                                                        <td style="display:none;" class="ImgId">@ei.ImagePath</td>
                                                        <td style="display:none;"><img src="@SupperClub.Code.ServerMethods.ServerUrl@SupperClub.Code.ServerMethods.EventImagePathPartial@ei.ImagePath" id="e_@(ei.ImagePath)" /></td>
                                                        <td><img src="@SupperClub.Code.ServerMethods.ServerUrl@SupperClub.Code.ServerMethods.EventImagePathPartial@ei.ImagePath" alt="@Model.SupperClub.Name" style="width:240px;" id="dis_@(ei.ImagePath)" /></td>
                                                        <td><a class="btnEditImage" href="#" onclick="return launchEditor('e_@(ei.ImagePath)','@SupperClub.Code.ServerMethods.ServerUrl@SupperClub.Code.ServerMethods.EventImagePathPartial@ei.ImagePath');">Edit your picture</a></td>
                                                        <td><a class="btnDeleteImage" href="#">Delete</a></td>
                                                    </tr>
                                                   }
                                                }
                                        </tbody>
                                    </table>
                                </div>
                                
                            </div>
                            <div class="imageDisplay item-img">
                                @if (Model.EventImages.Count > 0)
                                {
                                    <div id="divImg" style="float:left;">
                                              <table id="tblImg" style="float:left;border:1px solid #e2e2e2;margin-bottom:20px;">
                                                <thead style="border:1px solid #e2e2e2;color:#564A40;font-size:14px;font-weight:bold;padding:8px 15px;">
                                                    <tr>
                                                        <th style="border:1px solid #e2e2e2;vertical-align:middle;">Image</th>
                                                    </tr>
                                                </thead>
                                                <tbody style="border:1px solid #e2e2e2;">
                                                   @foreach (SupperClub.Domain.EventImage ei in Model.EventImages)
                                                   {
                                                        <tr class="rowImg" style="border:1px solid #e2e2e2;">
                                                            <td style="padding:10px;"><img src="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + @ei.ImagePath)" style="width:280px;vertical-align:middle;"  alt="@Model.Name" /></td>
                                                        </tr>           
                                                   }  
                                                </tbody>
                                              </table>    
                                            </div>
                                }
                                else
                                {
                                    <img src="@Url.Content(SupperClub.Code.ServerMethods.EventImagePath + Model.ImagePath)" alt="@Model.Name" style="width:240px;" />

                                }
                            </div>
                        </div>
                
                        <div class="tab-content" id="tab5" style="padding-left:0px; padding-right:0px;">                            
                            @if (Model.MultiSeating)
                            {
                                <br />
                                <h6 style="display:inline;font-size:medium;float:left;">Choose the seating:   </h6>
                            
                                foreach (SupperClub.Domain.EventSeating evs in Model.EventSeatings.OrderBy(x => x.Start))
                                {
                                    if (@evs.Id == Model.DefaultSeatingId)
                                    {
                                        <input type="radio" name="seatingTime" id="@evs.Id" value="@evs.Id" style="display:inline;float:left;" checked="checked"><label for="@evs.Id" style="display:inline;float:left;font-size:15px;">@evs.Start.ToShortTimeString()    </label>
                                    }
                                    else
                                    {
                                        <input type="radio" name="seatingTime" id="@evs.Id" value="@evs.Id" style="display:inline;float:left;"><label for="@evs.Id" style="display:inline;float:left;font-size:15px;">@evs.Start.ToShortTimeString()    </label>                            
                                    }
                                }
                                <input type="radio" name="seatingTime" id="all" value="10000" style="display:inline;float:left;"><label for="all" style="display:inline;float:left;font-size:15px;">All</label>
                                <br /><br />
                            }
                            <table class="standard-table" style="margin-bottom:0px;" id="tblGuestList">
                            <thead>
                            <tr>
									<th>Name</th>
                                    <th>Email</th>
                                    <th>Contact Number</th>
                                    <th>No. of Guests</th>
                                    @if (Model.MultiMenuOption)
                                    {
									    <th>Menu Option Chosen</th>
                                    }
                                    <th>Ratings</th>
									@if (Model.End < DateTime.Now)
         {
									    <th>Rate Guest</th>
         }
         else if (SupperClub.Code.UserMethods.IsAdmin)
         {
									    <th>Reject</th>
         }
         @if (SupperClub.Code.UserMethods.IsAdmin ||( Model.SupperClub.Id==SupperClub.Code.UserMethods.SupperClubId ))
         {
									<th> Price paid by guest</th>
          }
                            </tr>
                            </thead>
                            <tbody>
                            @if (Model.MultiSeating)
                            {
                                var grandTotalGuest = 0;
                                foreach (SupperClub.Domain.EventSeating est in Model.EventSeatings.OrderBy(x => x.Start))
                                {
                                    var classname = "Class" + est.Id;
                                    var totalclassname = "TotalClass" + est.Id;
                                    var totalGuestCnt = 0;

                                    var seatings = (from ea in est.EventAttendees
                                                    group ea by new
                                                    {
                                                        ea.UserId,
                                                        ea.User,
                                                        ea.MenuOptionId,
                                                        ea.EventMenuOption,
                                                        ea.EventId,
                                                        ea.UserRanking,
                                                        ea.VoucherId
                                                        
                                                    } into gcs
                                                    select new
                                                    {
                                                        
                                                        UserId = gcs.Key.UserId,
                                                        User = gcs.Key.User,
                                                        MenuOptionId = gcs.Key.MenuOptionId,
                                                        EventMenuOption = gcs.Key.EventMenuOption,
                                                        EventId = gcs.Key.EventId,
                                                        UserRanking = gcs.Key.UserRanking,
                                                        VoucherId=gcs.Key.VoucherId,
                                                        NumberOfGuests = gcs.Sum(ea => ea.NumberOfGuests),
                                                        TotalPrice = gcs.Sum(ea => ea.TotalPrice),
                                                        GuestPrice=gcs.Sum(ea=> ea.GuestBasePrice),
                                                        Discount=gcs.Sum(ea=>ea.Discount)
                                                    }).ToList().OrderBy(u => u.UserId).ThenBy(m => m.MenuOptionId);
                                    foreach (var eb in seatings)
                                    {
                                        SupperClub.Models.UserRankingModel urm = new SupperClub.Models.UserRankingModel(eb.EventId, eb.UserId, eb.User, eb.MenuOptionId, eb.EventMenuOption, eb.NumberOfGuests, eb.UserRanking);
                                        totalGuestCnt += @eb.NumberOfGuests;
                                        <tr id="@(eb.UserId)_@(est.Id)_@(eb.MenuOptionId)" class="@classname">
                                        <td>
                                            @eb.User.FirstName
                                            @if (SupperClub.Code.UserMethods.IsAdmin)
                                            {
                                                <a href="#" onclick="RejectAttendee(@Model.Id, '@eb.UserId', @est.Id, @eb.MenuOptionId, false, @eb.NumberOfGuests,@eb.TotalPrice);">Cancel Booking</a>
                                            }
                                        </td>
                                        <td>
                                            @if (Model.End > DateTime.Now && SupperClub.Code.UserMethods.IsAdmin)
                                            {
                                                
                                                    @eb.User.Email<br/><a href="@Url.Action("SendBookingEmail", "Event", new { eventId = Model.Id, userId = @eb.UserId, seatingId = @est.Id, numberOfGuests = @eb.NumberOfGuests })">Send Booking Email</a>
                                            }
                                            else
                                            {
                                                @eb.User.Email
                                            }
                                        </td>
                                        <td>
                                           @if (@eb.User.ContactNumber == null)
                                           {@blank}
                                           else
                                           {@String.Format("{0:+44(####)-######}", double.Parse(@eb.User.ContactNumber))}
                                        </td>
                                        <td>
                                            @eb.NumberOfGuests
                                        </td>
                                        @if (Model.MultiMenuOption)
                                        {
                                            <td>
                                               @eb.EventMenuOption.Title 
                                            </td>
                                        }
                                       @* <td id="td @eb.UserId@est.Id@eb.MenuOptionId">
                                            <div id="divShow @eb.UserId@est.Id@eb.MenuOptionId">
                                                <span id="@eb.UserId@est.Id@eb.MenuOptionId">
                                                    @if(@eb.Note == null) 
                                                        {@blank}
                                                    else 
                                                    {@eb.Note }
                                                </span>
                                                <a href="#" onclick="AddEditNote(@Model.Id, '@eb.UserId', @est.Id, @eb.MenuOptionId,@eb.Note);" class="button edit">
                                                        <i></i></a>
                                            </div>
                                        </td>*@
                                        <td>
                                            <i class="icon-thumbs-up"></i><span class="positive">@eb.User.PositiveRanking.ToString()</span>
                                            @Html.Raw(" | ")
                                            <i class="icon-thumbs-down"></i><span class="negative">@eb.User.NegativeRanking.ToString()</span>
                                        </td>
                                        @if (Model.End < DateTime.Now)
                                        {
                                            <td>
                                                @Html.Partial("DisplayTemplates/UserRanking", @urm)
                                            </td>
                                        }
                                        else if (SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            <td>
                                                <a href="#" onclick="RejectAttendee(@Model.Id, '@eb.UserId', @est.Id, @eb.MenuOptionId, false);" class="button small red">
                                                    <i class="icon-remove icon-white"></i>Reject</a>
                                            </td>
                                        }
                                            @if (SupperClub.Code.UserMethods.IsAdmin ||( Model.SupperClub.Id==SupperClub.Code.UserMethods.SupperClubId) )
                                            {
                                        <td>

                                            @if( @eb.VoucherId == null || @eb.VoucherId == 0)
                                            {
                                                <span class="negative">  @eb.TotalPrice</span>
                                                    
                                            }
                                              else
                                            {
                                               var v1=  Model.SupperClub.SupperClubVouchers.Where(v => @v.VoucherId == @eb.VoucherId).ToList();
                                               if(v1 !=  null && v1.Count > 0  )
                                               {

                                                  var diff=  eb.GuestPrice- eb.Discount;

                                                 <span class="negative">@diff</span>
                                               }
                                               else
                                               {
                                                <span class="negative" >  @eb.GuestPrice</span>
                                               }

                                          }
                                         
                                         


                                        </td>
                                            }
                                       
                                    </tr>
                                    }
                                <tr class="@totalclassname">
                                <td style="font-weight:bold;">Total Guests</td>
                                <td></td>
                                <td style="font-weight:bold;">@totalGuestCnt</td></tr> 
                                    grandTotalGuest += totalGuestCnt;
                                }
                                <tr id="grandTotal">
                                    <td style="font-weight:bold;">Total Guests</td>                                    
                                    <td></td>
                                    <td style="font-weight:bold;">@grandTotalGuest</td>
                                 </tr> 
                            }
                            else
                            {
                                var totalGuestCnt = 0;

                                var guestList = (from ea in Model.EventAttendees
                                                 group ea by new
                                                 {
                                                     ea.UserId,
                                                     ea.User,
                                                     ea.MenuOptionId,
                                                     ea.EventMenuOption,
                                                     ea.EventId,
                                                     ea.UserRanking,
                                                      ea.VoucherId
                                                 } into gcs
                                                 select new
                                                 {
                                                     UserId = gcs.Key.UserId,
                                                     User = gcs.Key.User,
                                                     MenuOptionId = gcs.Key.MenuOptionId,
                                                     EventMenuOption = gcs.Key.EventMenuOption,
                                                     EventId = gcs.Key.EventId,
                                                     UserRanking = gcs.Key.UserRanking,
                                                     VoucherId=gcs.Key.VoucherId,
                                                     NumberOfGuests = gcs.Sum(ea => ea.NumberOfGuests),
                                                     TotalPrice = gcs.Sum(ea => ea.TotalPrice),
                                                    GuestPrice=gcs.Sum(ea=> ea.GuestBasePrice),
                                                    Discount=gcs.Sum(ea=>ea.Discount)
                                                     
                                                 }).ToList().OrderBy(u => u.UserId).ThenBy(m => m.MenuOptionId);

                               

                                foreach (var ea in guestList)
                                {
                                    totalGuestCnt += @ea.NumberOfGuests;
                                    SupperClub.Models.UserRankingModel urm = new SupperClub.Models.UserRankingModel(ea.EventId, ea.UserId, ea.User, ea.MenuOptionId, ea.EventMenuOption, ea.NumberOfGuests, ea.UserRanking);
                                   <tr id="@(ea.UserId)_0_@(ea.MenuOptionId)">
                                        <td>
                                            @ea.User.FirstName
                                            @if (SupperClub.Code.UserMethods.IsAdmin)
                                            {
                                                <a href="#" onclick="RejectAttendee(@Model.Id, '@ea.UserId', 0, @ea.MenuOptionId, false, @ea.NumberOfGuests, @ea.TotalPrice);">Cancel Booking</a>
                                            }
                                        </td>
                                        <td>
                                            @if (Model.End > DateTime.Now && SupperClub.Code.UserMethods.IsAdmin)
                                            {
                                                @ea.User.Email<br/><a href="@Url.Action("SendBookingEmail", "Event", new { eventId = Model.Id, userId = @ea.UserId, seatingId = 0, numberOfGuests = @ea.NumberOfGuests })">Send Booking Email</a>
                                            }
                                            else
                                            {
                                                @ea.User.Email
                                            }
                                        </td>
                                        <td>
                                            @if (@ea.User.ContactNumber == null)
                                            {@blank}
                                            else
                                            {@String.Format("{0:+44(####)-######}", double.Parse(@ea.User.ContactNumber))}
                                        </td>
                                        <td>
                                            @ea.NumberOfGuests
                                        </td>
                                        <td>
                                            <i class="icon-thumbs-up"></i><span class="positive">@ea.User.PositiveRanking.ToString()</span>
                                            @Html.Raw(" | ")
                                            <i class="icon-thumbs-down"></i><span class="negative">@ea.User.NegativeRanking.ToString()</span>
                                        </td>
                                        @if (Model.End < DateTime.Now)
                                        {
                                            <td>
                                                @Html.Partial("DisplayTemplates/UserRanking", @urm)
                                            </td>
                                        }
                                        else if (SupperClub.Code.UserMethods.IsAdmin)
                                        {
                                            <td>
                                                <a href="#" onclick="RejectAttendee(@Model.Id, '@ea.UserId', 0, @ea.MenuOptionId, false);" class="button small red">
                                                    <i class="icon-remove icon-white"></i>Reject</a>
                                            </td>
                                        }
                                        @if (Model.MultiMenuOption)
                                        {
                                            <td>
                                               @ea.EventMenuOption.Title 
                                            </td>
                                        }
                                        @if (SupperClub.Code.UserMethods.IsAdmin || (Model.SupperClub.Id==SupperClub.Code.UserMethods.SupperClubId ))
         {
                                        <td>
                                     
                                            @if( @ea.VoucherId == null || @ea.VoucherId == 0)
                                            {
                                                <span class="negative">  @ea.TotalPrice</span>

                                            }
                                              else
                                            {
                                               var v1=  Model.SupperClub.SupperClubVouchers.Where(v => @v.VoucherId == @ea.VoucherId).ToList();
                                                if(v1 !=  null && v1.Count > 0  )
                                                {

                                                  var diff=  ea.GuestPrice- ea.Discount;

                                                 <span class="negative">@diff</span>
                                               }
                                               else
                                               {
                                                <span class="negative" >  @ea.GuestPrice</span>
                                               }

                                          }
                                        </td>
                                        }
                                    </tr>                                
                                }
                                <tr>
                                <td style="font-weight:bold;">Total Guests</td>
                                <td></td>
                                <td style="font-weight:bold;">@totalGuestCnt</td></tr> 
                            }
                               
                             </tbody></table>

                            <br />
                            
                            <a href="@Url.Action("GuestList", new { eventId = Model.Id })" class="button medium yellow" style="">Full Guest Info</a> 
                            <a href="@Url.Action("DownloadGuestList", new { eventId = Model.Id })" class="button medium yellow" style="">Download Guest List</a> 
                        </div>
                    }
                    else
                    {
                        <div class="tab-content" id="tab6">
                            <!-- Hosted By Section -->
                            <div class="details-column" itemscope itemtype="https://schema.org/LocalBusiness">
                                <h5>
                                    <a href="@(SupperClub.Code.ServerMethods.ServerUrl + Model.SupperClub.UrlFriendlyName)" itemprop="url">
                                        <span itemprop="name">@Model.SupperClub.Name</span>                             
                                    </a>
                                    &nbsp;
                                    <span class="button small green" id="viewReviews" style=" margin-top: -5px; cursor: pointer; padding: 2px 5px; font-size: 16px;" data-toggle="modal" data-target="#reviewModal">
                                        View Reviews
                                    </span>
                                </h5>
                                <h5>Summary</h5>
                                @Model.SupperClub.Summary
                                <h5>Description</h5>
                                <span itemprop="description">@Model.SupperClub.Description</span>
                            </div>
                        </div>
                    
                    }                    
                    <div class="tab-content" id="tab7" itemprop="location" itemscope itemtype="https://schema.org/PostalAddress">
                        <div class="display field">
                            <div id="map-canvas" style="width: 100%; height: 480px; margin-left: -17px;"></div>
                            <br />
                            <h5>*Full Address will be sent to you via email after you've booked</h5>
                            <div id="address">
                                <span class="display field hideEle">@Html.DisplayFor(m => m.Address)</span>
                                <span class="display field hideEle" itemprop="addressLocality">@Html.DisplayFor(m => m.City)</span>
                                <span class="display field hideEle" itemprop="postalCode">@Html.DisplayFor(m => m.PostCode)</span>
                            </div>
                        </div>
                        <div class="editor field">
                            <div class="field">                                
                                @Html.LabelFor(m => m.Address)
                                @Html.ValidationMessageFor(m => m.Address)
                            </div>
                            <div class="field">
                                @Html.EditorFor(m => m.Address)
                            </div>
                            <div class="label">
                                @Html.LabelFor(m => m.Address2)
                                @Html.ValidationMessageFor(m => m.Address2)
                            </div>
                            <div class="field">
                                @Html.EditorFor(m => m.Address2)
                            </div>
                            <div class="label">                                
                                @Html.LabelFor(m => m.City)
                                @Html.ValidationMessageFor(m => m.City)
                            </div>
                            <div class="field">
                                @Html.EditorFor(m => m.City)
                            </div>
                            <div class="label">                                
                                @Html.LabelFor(m => m.PostCode)
                                @Html.ValidationMessageFor(m => m.PostCode)
                            </div>
                            <div class="field">
                                @Html.EditorFor(m => m.PostCode)
                            </div>
                        </div>
                    </div>
                    @if (SupperClub.Code.UserMethods.IsAdmin)
                    {
                     <div class="tab-content" id="tab8" style="padding-left:0px; padding-right:0px;"> 
                        <table class="standard-table" style="margin-bottom:0px;" id="tblWaitlistList">
                            <thead>
                            <tr>									
                                    <th>Email</th>
                                    <th>Name</th>                                   
                            </tr>
                            </thead>
                            <tbody>
                           
                                @if (@Model.EventWaitLists.Count > 0)
                                {
                                    foreach (var ewl in @Model.EventWaitLists)
                                    {
                                        <tr>
                                            <td>
                                                @ewl.Email
                                            </td>
                                            
                                                @if (@ewl.UserId != null)
                                                {
                                                    <td>
                                                    @ewl.User.FirstName @ewl.User.LastName
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                        
                                        </tr>                                
                                    }
                                }
                               
                             </tbody></table>
                    </div>
                    }
                </div>

                </div>    
                    if (@Model.TotalNumberOfAvailableSeats <= 0)
                    {    
                <div id="dialog" class="popup_box">
                    <label>Email address</label>
                    <input type="text" value="" id="txtAddWaitlistEmail" /> 
                    <input type="text" id="hdnEventId" value="0" style="display:none;"/>   
                    <br />    
                    <input type="button" value="Add to Waiting List" id="btnAddWaitListNew" class="button small green" />                
                    <input type="button" value="Close" class="button small green" id="btnClose" /> 
                    <br /><br />
                    <label id="lblStatus" title="" style="font-weight:bold;"/>               
                </div>   
                    }
        }
        <!-- Modal -->
        <div class="modal" id="reviewModal" tabindex="-1" role="dialog" aria-labelledby="Chef's reviews'" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-body" style="height: 500px;">
                        <iframe src="@(SupperClub.Code.ServerMethods.ServerUrl + Model.SupperClub.UrlFriendlyName + "/reviews")" frameborder="0"></iframe>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}