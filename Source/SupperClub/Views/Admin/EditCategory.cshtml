@model SupperClub.Domain.SearchCategory
@{
    ViewBag.Title = "Edit Category";
}
@section PageSpecificScripts {
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/multi-select.css")">
<script src="@Url.Content("~/Scripts/jquery.multi-select.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.quicksearch.js")" type="text/javascript"></script>

     <script type="text/javascript">
         $(document).ready(function () {
             $("#EditCategoryForm").submit(function () {
                 var str = "";
                 $(".searchable option:selected").each(function () {
                     str += $(this).val() + ",";
                 });
                 $("#TagList").val(str);
                 $("#EditCategoryForm").validate();
             });

             $("#CategoryDL").change(function () {
                 var selectedCategory = parseInt($("#CategoryDL option:selected").val());
                 $("#Id").val(selectedCategory);
                 if (selectedCategory > 0) {
                     $.ajax({
                         url: '@Url.Action("GetSearchCategory", "Admin")',
                         type: "GET",
                         data: { searchCategoryId: selectedCategory },
                         success: function (_category) {
                             $("#Name").val(_category.Name);
                             $("#UrlFriendlyName").val(_category.UrlFriendlyName); 
                             var selectedOptions = _category.TagList.split(",");
                             for (var i in selectedOptions) {
                                 var optionVal = selectedOptions[i];
                                 $('.searchable').multiSelect('select', optionVal);
                             }
                             $('.searchable').multiselect('refresh');
                             $("#TagList").val("," + _category.SelectedTagIds + ",");
                         },
                         error: function () {
                             alert("Failed to get category details.");
                         }
                     });
                 }
             });

             $('.searchable').multiSelect({
                 selectableHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Search...'>",
                 selectionHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Search...'>",
                 afterInit: function (ms) {
                     var that = this,
                         $selectableSearch = that.$selectableUl.prev(),
                         $selectionSearch = that.$selectionUl.prev(),
                         selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                         selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                     that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                     .on('keydown', function (e) {
                         if (e.which === 40) {
                             that.$selectableUl.focus();
                             return false;
                         }
                     });

                     that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                     .on('keydown', function (e) {
                         if (e.which == 40) {
                             that.$selectionUl.focus();
                             return false;
                         }
                     });
                 },
                 afterSelect: function () {
                     this.qs1.cache();
                     this.qs2.cache();
                 },
                 afterDeselect: function () {
                     this.qs1.cache();
                     this.qs2.cache();
                 }
             });

             $('.searchable').change(function () {
                 var str = "";
                 $(".searchable option:selected").each(function () {
                     str += $(this).val() + ",";
                 });
                 $("#TagList").val(str);
             }).change();
         });
         </script>
}
<!--  Page Title -->
<div class="container pattern-design2">
    <div class="container">
        <p>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() / @ViewBag.Title</p>
    </div>	
</div>
<!-- Page Title End -->

@if (ViewBag.Notification != null || TempData["Notification"] != null)
{
    SupperClub.Models.NotificationModel nModel = (ViewBag.Notification == null) ? (SupperClub.Models.NotificationModel)TempData["Notification"] : (SupperClub.Models.NotificationModel)ViewBag.Notification;
    TempData["Notification"] = null;
    @Html.Partial("_Notification", nModel);
}
<div class="container">
	<div class="sixteen columns">
        <h4 class="headline">Create new tag here</h4>
        @using (Html.BeginForm("EditCategory", "Admin", FormMethod.Post, new { id = "EditCategoryForm", enctype = "multipart/form-data" }))
        {
            <div class="field">
            @Html.DropDownList("CategoryDL", (SelectList)ViewBag.SearchCategories, "- Select Category -", new { @class = "custom_select" })
            </div>        
            @Html.HiddenFor(m => m.Id)        
            <div class="field">
                <label>Category name</label>
                @Html.ValidationMessageFor(m => m.Name)
                @Html.EditorFor(m => m.Name)
            </div>
            <div class="field">
                <label>SEO name</label>
                @Html.ValidationMessageFor(m => m.UrlFriendlyName)
                @Html.EditorFor(m => m.UrlFriendlyName)
            </div>
            <div class="field">
                <label>Tags</label>
                @Html.HiddenFor(m => m.TagList)
                <select class="searchable" multiple="multiple">
                    @foreach(SupperClub.Domain.Tag t in ViewBag.Tags)
                    {
                        if (@Model != null && @Model.TagList.Contains(","+ t.Id.ToString() + ","))
                        {
                            <option value="@t.Id" selected="selected">@t.Name</option>
                        }
                        else
                        {
                            <option value="@t.Id">@t.Name</option>
                        }
                    }
                </select>
            </div>
            <input type="submit" value="Update Category" class="button small green" />
        }
	</div>
</div>