@model SupperClub.Models.TPIChooseTicketsModel
@{
    Layout = null;
}
<!DOCTYPE html>
<!--[if lt IE 7 ]><html class="ie ie6" lang="en"><![endif]-->
<!--[if IE 7 ]><html class="ie ie7" lang="en"><![endif]-->
<!--[if IE 8 ]><html class="ie ie8" lang="en"><![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang="en" style="padding-top:0px !important;background-color:#fff !important;">
<!--<![endif]-->
<head>

    <!-- Basic Page Needs
    ================================================== -->
    <meta charset="utf-8">
    <title>Look out for all the yummy offerings your favourite chef is dishing out</title>
    <meta name="description" content="">


    <!-- CSS
     ================================================== -->
    <!-- Prefetch DNS for external assets (Twitter widgets etc). -->
    <link rel="dns-prefetch" href="//ajax.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//themes.googleusercontent.com">
    <link rel="dns-prefetch" href="//www.google-analytics.com">

    <link rel="stylesheet" href="@Url.Content("~/Content/css/screen.css")" />
    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,300,600,700,900' rel='stylesheet' type='text/css' />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/css/jquery-ui-1.10.3.min.css")" />

    <!-- Scripts
    ================================================== -->
    <script src="@Url.Content("~/Scripts/jquery-1.7.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/bower_components/modernizr/modernizr.js")"></script>
    <script src="@Url.Content("~/bower_components/jquery/dist/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.10.4.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/bower_components/chosen_v1.3.0/chosen.jquery.min.js")"></script>
    <script src="@Url.Content("~/bower_components/svg4everybody/svg4everybody.min.js")"></script>
    <script src="@Url.Content("~/bower_components/owl-carousel2/dist/owl.carousel.min.js")"></script>
    <script src="@Url.Content("~/bower_components/nouislider/distribute/jquery.nouislider.all.min.js")"></script>

    <!-- legacy.js is datepicker support for ie8 -->
    <script src="@Url.Content("~/bower_components/pickadate/lib/compressed/legacy.js")"></script>
    <script src="@Url.Content("~/bower_components/pickadate/lib/compressed/picker.js")"></script>
    <script src="@Url.Content("~/bower_components/pickadate/lib/compressed/picker.date.js")"></script>

    <script src="@Url.Content("~/bower_components/nanoscroller/bin/javascripts/jquery.nanoscroller.min.js")"></script>
    <script src="@Url.Content("~/bower_components/magnific-popup/dist/jquery.magnific-popup.min.js")"></script>
    <script src="@Url.Content("~/bower_components/jquery.countdown/dist/jquery.countdown.js")"></script>
    <script src="@Url.Content("~/Scripts/init.min.js")"></script>
    <style>
        a.disabled {
            background-color: white !important;
        }
    </style>
</head>
<body>

    <script type="text/javascript">
        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        $(document).ready(function () {

            function showErrorPopup(errorMsg)
            {
                $(".message-popup-wraper .messages-popup").addClass("is-hidden");
                $("#errorMsgText").text(errorMsg);
                $(".messages-popup--added").clone().appendTo(".message-popup-wraper").addClass("is-active").delay(20000).queue(function () { $(this).remove() }),
                $(".messages-popup").on("click", function () { $(this).addClass("is-hidden") });
                $("#proceedToPayment").prop( "disabled", true );
                enableSpanners();
            }
            function enableSpanners()
            {
                $(".number-spinner .number-spinner__up").removeClass('disabled');
                $(".number-spinner .number-spinner__down").removeClass('disabled');
            }
            function disableSpanners()
            {
                $(".number-spinner .number-spinner__up").addClass('disabled');
                $(".number-spinner .number-spinner__down").addClass('disabled');
            }
            function updateTotal() {
                //debugger;
                var selectedNumberOfTickets = $("#txtSingleMenu").val();
                var costPerTicket = @Model.BookingModel.totalTicketCost;
                var currency = "@Model.BookingModel.currency";
                var seatId = @Model.BookingModel.seatingId;
                var str = "";
                if($("input[type='radio'][name='seatingTime']").length > 0)
                {
                    var selectedVal = $("input[type='radio'][name='seatingTime']:checked").val();
                    if(selectedVal >= 0)
                        seatId = selectedVal;
                }
                // debugger;
                if (isNaN(selectedNumberOfTickets) || selectedNumberOfTickets =="" || selectedNumberOfTickets == 0)
                {
                    alert("Please select some tickets!");
                    $( "#proceedToPayment" ).prop( "disabled", true );
                    return;
                }
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UpdateTickets", "TPI")',
                    contentType: "application/json",
                    dataType: "json",
                    data: { numberTicketsRequested: selectedNumberOfTickets, seatingId : seatId, strBmm : str },
                    success: function(updateTickets) {
                        if (updateTickets.Success == false) {
                            $( "#proceedToPayment" ).prop( "disabled", true );
                            // Session Timed out or no basket found (no cookie)
                            if(updateTickets.NumberTicketsAllocated == 0) {
                                window.location = '@Url.Action("SessionExpired", "Booking")';
                                return;
                            }
                            if(updateTickets.NumberTicketsAvailable == 0)
                            {
                                // Sold out
                                if(seatId > 0)
                                {
                                    alert("Sorry but we were not able to allocate the number of tickets you wanted for this seating. You can try to book a different seating!");
                                }
                                else
                                {
                                    alert("Sorry but we were not able to allocate the number of tickets you wanted. They've been snapped up!");
                                }
                                //alert("Sorry but we were not able to allocate the number of tickets you wanted. They've been snapped up!");
                                return;
                            }
                            else if(updateTickets.NumberTicketsAvailable < selectedNumberOfTickets)
                            {
                                if(seatId > 0)
                                    alert("Sorry but we have only " + updateTickets.NumberTicketsAvailable + " tickets available for this seating. You can try to book a different seating or reduce total seats!");
                                else
                                    alert("Sorry but we have only " + updateTickets.NumberTicketsAvailable + " tickets left for this event!");

                                $( "#proceedToPayment" ).prop( "disabled", true );
                                enableSpanners();
                                return;
                            }
                            // Set the selected value back to its previous value
                            $('#BookingModel_numberOfTickets').val(updateTickets.NumberTicketsAllocated);
                            var numberOfTickets = updateTickets.NumberTicketsAllocated;
                            //debugger;
                            if (Number(numberOfTickets)) {
                                var totalDue = numberOfTickets * costPerTicket;
                                $("[name='totalPrice']").html((totalDue - updateTickets.DiscountAmount).toFixed(2));
                                if(updateTickets.DiscountAmount > 0) {
                                    $("[name='totalDiscount']").html(updateTickets.DiscountAmount.toFixed(2));
                                }
                            }
                            enableSpanners();
                        }
                        else
                        {
                            var numberOfTickets = updateTickets.NumberTicketsAllocated;
                            //debugger;
                            if (Number(numberOfTickets)) {
                                var totalDue = numberOfTickets * costPerTicket;
                                $("[name='totalPrice']").html((totalDue - updateTickets.DiscountAmount).toFixed(2));
                                if(updateTickets.DiscountAmount > 0) {
                                    $("[name='totalDiscount']").html(updateTickets.DiscountAmount.toFixed(2));
                                }
                            }
                            $( "#proceedToPayment" ).prop( "disabled", false );
                            enableSpanners();
                            if(totalDue - updateTickets.DiscountAmount <= 0)
                            {
                                $("#proceedToPayment").text("Book Free!");
                            }
                            else
                            {
                                $("#proceedToPayment").text("Proceed to payment!");
                            }                            
                        }
                        // Update the cost. TODO: Currency symbol conversion

                    },
                    error: function(response) {
                        enableSpanners();
                        alert("Sorry, there was some error processing your request");
                    }
                });
            }

            function updateMenuTickets() {
                var seatId = @Model.BookingModel.seatingId;
                if($("input[type='radio'][name='seatingTime']").length > 0)
                {
                    var selectedVal = $("input[type='radio'][name='seatingTime']:checked").val();
                    if(selectedVal >= 0)
                        seatId = selectedVal;
                }
                var totalAmt = 0;
                var numOfTickets = 0;
                var num_tr = $('#menuSel tr').length-1;
                var t = document.getElementById('menuSel');
                var rate = 0;
                rate = 0*1.0;
                var qty = 0;
                var amount = 0;
                var myStr = "";

                for(var i = 1; i <= num_tr;i++) {
                    var rate1 = $(t.rows[i].cells[2]).closest('tr').find('.bmmTicketCost').text();

                    var menuId = parseInt($.trim($(t.rows[i].cells[3]).closest('tr').find('.bmmId').text()));

                    rate1= rate1.toString().replace("£","");
                    rate=parseFloat(rate1);
                    qty = parseInt($(t.rows[i].cells[1]).closest('tr').find("[name='menutickets']").val());

                    amount = qty * rate;
                    debugger;
                    $(t.rows[i].cells[2]).closest('tr').find("[name='menuTicketTotal']").html("£" + amount.toFixed(2));
                    //alert(menuId + "," + qty + "," + rate + "," +amount);

                    //$(t.rows[i].cells[3]).html("£" + amount.toFixed(2)); // output the values
                    totalAmt += amount;
                    numOfTickets += qty;
                    if(myStr.length > 0)
                        myStr += ",";
                    myStr += menuId + "|"+ qty;
                }
                //var obj = JSON.stringify(myObj);
                if(numOfTickets > 0)
                {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("UpdateTickets", "TPI")',
                        contentType: "application/json",
                        dataType: "json",
                        data: { numberTicketsRequested: numOfTickets, seatingId : seatId, strBmm : myStr },
                        success: function(updateTickets) {
                            if (updateTickets.Success == false)
                            {
                                $( "#proceedToPayment" ).prop( "disabled", true );
                                if(updateTickets.NumberTicketsAvailable == 0)
                                {
                                    // Sold out
                                    if(seatId > 0)
                                        alert("Sorry but we were not able to allocate the number of tickets you wanted for this seating. You can try to book a different seating!");
                                    else
                                        alert("Sorry but we were not able to allocate the number of tickets you wanted. They've been snapped up!");
                                    enableSpanners();
                                    return;
                                }
                                else if(updateTickets.NumberTicketsAvailable < numOfTickets)
                                {
                                    if(seatId > 0)
                                        alert("Sorry but we have only " + updateTickets.NumberTicketsAvailable + " tickets available for this seating. You can try to book a different seating or reduce total seats!");
                                    else
                                        alert("Sorry but we have only " + updateTickets.NumberTicketsAvailable + " tickets left for this event!");
                                    enableSpanners();
                                    return;
                                }

                                // Session Timed out or no basket found (no cookie)
                                if(updateTickets.NumberTicketsAllocated == 0) {
                                    window.location = '@Url.Action("SessionExpired", "Booking")';
                                    return;
                                }

                            }
                            else{
                                //debugger;
                                $("[name='totalPrice']").html((totalAmt - updateTickets.DiscountAmount).toFixed(2));
                                if(updateTickets.DiscountAmount > 0) {
                                    $("[name='totalDiscount']").html(updateTickets.DiscountAmount.toFixed(2));
                                }
                                $( "#proceedToPayment" ).prop( "disabled", false );
                                enableSpanners();
                                if(totalAmt - updateTickets.DiscountAmount <= 0)
                                {
                                    $("#proceedToPayment").text("Book Free!");
                                }
                                else
                                {
                                    $("#proceedToPayment").text("Proceed to payment!");
                                }
                               
                            }

                        },
                        error: function(response) {
                            enableSpanners();
                            alert("Sorry, there was some error processing your request");
                        }
                    });
                }
                else
                {
                    enableSpanners();
                    alert("Sorry but total number of tickets can not be zero!");
                }
            }
            function checkAndEnableBuyTickets() { debugger;
                if ($("#chkTerms")[0].checked == true) {
                    $("#proceedToPayment").prop("disabled", false);
                }
                else {
                    $("#proceedToPayment").prop("disabled", true);
                }
            }
            $(".number-spinner .number-spinner__up").on("click", function () {
                //debugger;
                if ($(this).hasClass('disabled')) return false;
                var e = $(this).siblings("input");
                n = e.val();
                t = Number(n) + 1;
                e.val(t);
                disableSpanners();
                if(("@Model.Event.MultiMenuOption").toLowerCase() == "true")
                {
                    updateMenuTickets();
                }
                else
                {
                    updateTotal();
                }
            });
            $(".number-spinner .number-spinner__down").on("click", function () {
                //debugger;
                if ($(this).hasClass('disabled')) return false;
                var e = $(this).siblings("input"),
                    n = e.val(),
                    t = Number(n) - 1;
                0 >= t ? (e.val(0)) : (e.val(t));
                disableSpanners();
                if(("@Model.Event.MultiMenuOption").toLowerCase() == "true")
                {
                    updateMenuTickets();
                }
                else
                {
                    updateTotal();
                }
            });
            $("#chkTerms").change(function () {
                checkAndEnableBuyTickets();
            });
            $(".choose-menu-table-tpi .number-spinner input").on("input change", function () {
                disableSpanners();

                if(("@Model.Event.MultiMenuOption").toLowerCase() == "true")
                {
                    updateMenuTickets();
                }
                else
                {
                    updateTotal();
                }
                //calculate_total_price();
            });

            $("#BookingModel_bookingRequirements").on("blur", function () {
                //debugger;
                var msgText = $("#BookingModel_bookingRequirements").val();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UpdateBookingRequirements", "TPI")',
                    contentType: "application/json",
                    dataType: "json",
                    data: { message: msgText },
                    success: function(success) {
                    },
                    error: function(success) {
                    }
                });
            });
            function calculate_total_price() {
                var sum_value_array = [];
                $(".choose-menu-table-tpi .number-spinner input").each(function () {
                    var e = parseInt($(this).val()),
                        n = $(this).parent().parent("td").siblings().find(".menu-sum").attr("data-price"),
                        t = $(this).parents("td").siblings().find(".menu-sum b");
                    if (isNaN(e))
                        t.html(0), sum_value_array.push(0);
                    else { var o = e * n; t.html(o.toFixed(2)), sum_value_array.push(o) }
                });
                var total = eval(sum_value_array.join("+")); $(".total-number b").html(total);
            };

            // Set selected seatingTime
            $("input[type='radio'][name='seatingTime']").change(function () {
                //debugger;
                var selectedVal= $("input[type='radio'][name='seatingTime']:checked").val();
                if(selectedVal >=0)
                    $('#BookingModel_seatingId').val(selectedVal);
                if(("@Model.Event.MultiMenuOption").toLowerCase() == "true")
                    updateMenuTickets();
                else
                    updateTotal();
            });


            $("#chooseTicketForm").submit(function() {
                //debugger;
                return checkSeating();
            });

            function checkSeating() {
                //debugger;
                var seatId = @Model.BookingModel.seatingId;
                var numOfTickets = @Model.BookingModel.numberOfTickets;
                if($("input[type='radio'][name='seatingTime']").length > 0)
                {
                    seatId = $("input[type='radio'][name='seatingTime']:checked").val();
                    if(!seatId || seatId <= 0)
                    {
                        //alert("Please choose a seating before continuing!");
                        $("#seatingPopup").click();
                        return false;
                    }
                    if(numOfTickets <= 0)
                    {
                        alert("You have not selected any tickets! Please add tickets and proceed.");
                        return false;
                    }
                }
                else
                {
                    $( "#proceedToPayment" ).prop( "disabled", false );
                    return true;
                }
            }
        });
    </script>


    <div class="container payment-forms">
        <div class="layout layout--rev">
            <div class="layout__item large-and-up-2/3">
                <h4 class="h5 line-height-1 mb-- mt--">@Model.Event.Name</h4>
                <time class="mb">
                    <svg role="img" class="icon ">
                        <use xlink:href="@Url.Content("~/Content/images/")icons.svg#icon-large_calendar"></use>
                    </svg>
                    @Model.Event.Start.ToString("ddd, d MMM yyyy")
                    
                    @if (!Model.Event.MultiSeating)
                    {
                        <svg role="img" class="icon color-blue icon--14x14 ml-">
                            <use xlink:href="@Url.Content("~/Content/images/")icons/icons.svg#icon-small_clock"></use>
                        </svg>
                        <span>
                           @Model.Event.Start.ToShortTimeString() - @Model.Event.End.ToShortTimeString()
                        </span>
                    }
                            @*<span>
                                @if (Model.Event.MultiSeating && Model.BookingModel.bookingSeatingModel != null && Model.BookingModel.bookingSeatingModel.Count > 0)
                        {
                            if (ViewBag.selectedSeating != null)
                            {
                                @: @ViewBag.selectedSeating.Start.ToShortTimeString() - @ViewBag.selectedSeating.End.ToShortTimeString()
                            }
                        }
                        else
                        {

                        }
                            </span>*@
</time>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "chooseTicketForm" }))
                {
                <div>                   
                    @if (Model.Event.MultiSeating && Model.BookingModel.bookingSeatingModel != null && Model.BookingModel.bookingSeatingModel.Count > 0)
                    {
                        <h1 class="h5 mb-- mt-">Choose your seating</h1>
                        <div class="choose-tickets-table-wrapper-tpi">
                        @foreach (var seating in Model.BookingModel.bookingSeatingModel)
                        {
                            if (ViewBag.selectedSeatingId != null && ViewBag.selectedSeatingId != 0 && ViewBag.selectedSeatingId == seating.seatingId)
                            {
                                <input type="radio" checked="checked" name="seatingTime" id="@seating.seatingId" value="@seating.seatingId" style="display:inline;">
                                <label id="seatingtime_ @seating.seatingId" for="@seating.seatingId" style="display:inline;font-size:16px;">@seating.start.ToShortTimeString()</label></input>
                            }
                            else
                            {
                            if (@seating.availableSeats > 0)
                            {
                                <input type="radio" name="seatingTime" id="@seating.seatingId" value="@seating.seatingId" style="display:inline;">
                                <label id="seatingtime_ @seating.seatingId" for="@seating.seatingId" style="display:inline;font-size:16px;">@seating.start.ToShortTimeString()</label></input>
                            }
                            else
                            {
                            <input type="radio" name="seatingTime" id="@seating.seatingId" value="@seating.seatingId" style="display:inline;" disabled="disabled">
                            <label id="seatingtime_ @seating.seatingId" for="@seating.seatingId" style="display:inline;font-size:16px;">@seating.start.ToShortTimeString()</label></input>
                            }
                            }
                        }
                    </div>
                    }
                    @if (Model.Event.MultiMenuOption && Model.BookingModel.bookingMenuModel != null && Model.BookingModel.bookingMenuModel.Count > 0)
                    {
                    <h1 class="h5 mb-- mt-">Choose your Menu</h1>
                    }
                    else
                    {
                    <h1 class="h5 mb-- mt-">Choose your tickets</h1>
                    }
                    <div class="choose-tickets-table-wrapper-tpi mb-">
                        <table class="choose-tickets-table-tpi" id="menuSel">
                            <thead>
                                <tr>
                                    <th>Menu Type</th>
                                    <th>Number of Guests</th>
                                    <th>Price Per Person</th>
                                    @if (Model.Event.MultiMenuOption && Model.BookingModel.bookingMenuModel != null && Model.BookingModel.bookingMenuModel.Count > 0)
                                    {
                                        <th>Total Price</th>
                                    }
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.BookingModel.bookingMenuModel == null || Model.BookingModel.bookingMenuModel.Count == 0)
                                {
                                <tr>
                                    <td>
                                        <div class="flag__body">
                                            <span class="chooser__label opacity-7 type-semibold"> @Model.BookingModel.EventName</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="number-spinner">
                                            <input name="menutickets" type="text" class="input--primary input--extrasmall text-center" onkeypress="return isNumber(event);" placeholder='0' id="txtSingleMenu" value="@Model.BookingModel.numberOfTickets" />
                                            <a href="javascript:;" class="number-spinner__up"></a>
                                            <a href="javascript:;" class="number-spinner__down"></a>
                                        </div>
                                    </td>
                                    <td id="ticketCost">
                                        <span class='type-extrahuge type-semibold color-dark'>
                                            £@Html.DisplayFor(x => x.BookingModel.totalTicketCost)
                                        </span>
                                    </td>
                                    <td style="display:none;"></td>
                                </tr>
                                }
                                else
                                {
                                for (int i = 0; i < Model.BookingModel.bookingMenuModel.Count; i++)
                                {
                                <tr class="menuCountSelect">
                                    <td class="bmmMenuTitle">
                                        <div class="flag__body">
                                            <span class="type-small opacity-7 type-semibold"> @Html.DisplayFor(x => x.BookingModel.bookingMenuModel[i].menuTitle)</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="number-spinner mb--">
                                            <input name="menutickets" type="text" class="input--primary input--extrasmall text-center" style="width:40px !important;" onkeypress="return isNumber(event);" placeholder='0' id="menuOption_@Model.BookingModel.bookingMenuModel[i].menuOptionId" value="@Model.BookingModel.bookingMenuModel[i].numberOfTickets">
                                            <a href="javascript:;" class="number-spinner__up" style="width:25px !important;"></a>
                                            <a href="javascript:;" class="number-spinner__down" style="width:25px !important;"></a>
                                        </div>
                                    </td>
                                    <td class="bmmTicketCost">
                                        <span class='type-large type-semibold color-dark'>
                                            £@SupperClub.Domain.CostCalculator.CostToGuest(Model.BookingModel.bookingMenuModel[i].baseTicketCost, Model.BookingModel.commission)
                                        </span>
                                    </td>
                                    <td class="bmmTicketTotalCost">
                                        <span class='type-large type-semibold color-dark' name="menuTicketTotal">
                                            £@(SupperClub.Domain.CostCalculator.CostToGuest(Model.BookingModel.bookingMenuModel[i].baseTicketCost, Model.BookingModel.commission) * Model.BookingModel.bookingMenuModel[i].numberOfTickets)
                                        </span>
                                    </td>
                                    <td class="bmmId" style="display:none;">@Html.DisplayFor(x => x.BookingModel.bookingMenuModel[i].menuOptionId)</td>
                                </tr>
                                }
                                }
                            </tbody>
                        </table>
                    </div>

                    <hr class="hr hr--dots mt-">
                    <div class="justifize">
                        <div class="justifize__box">
                            <span class='type-bold type-x-huge color-dark line-height-1-15'>Total £</span>
                            <span class='type-bold type-x-huge color-dark line-height-1-15' name="totalPrice">@Html.DisplayFor(x => x.BookingModel.totalAfterDiscount)</span>
                        </div>
                    </div>
                    @Html.HiddenFor(x => x.BookingModel.eventId)
                    @Html.HiddenFor(x => x.BookingModel.currency)
                    <hr class="hr hr--dots mb-">
                    <h2 class="h5 mb--" id="4">Any Special Requirements?</h2>
                    <div class="large-and-up-ph++">
                        @Html.ValidationMessageFor(x => x.BookingModel.bookingRequirements)
                        @Html.TextAreaFor(m => m.BookingModel.bookingRequirements, new { @class = "input--primary input--textarea input--full mb- txtMsgChef", placeholder = "Please include any special requirements you have here for the host: dietary needs, allergies, whether you would like to sit with other people who've booked separately, etc. - the host will do their best to accommodate" })
                    </div>
                    <span class="large-and-up-ph++ mb">
                        <button type="submit" class="btn btn--primary btn--full btn--54" id="proceedToPayment" style="display: display:inline !important; width: 80% !important;">Proceed to Payment</button>
                    </span>
                </div>
                }
            </div>
        </div>
    </div>    
</body>

</html>




