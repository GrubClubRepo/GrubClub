@model SupperClub.Domain.SupperClub

@{
    ViewBag.Title = "Register Your Grub Club";
}
@section PageSpecificScripts {
    @*<link rel="stylesheet" type="text/css" href="@Url.Content("~/Scripts/plupload/jquery.plupload.queue/css/jquery.plupload.queue.css")" />*@
    <link rel='stylesheet' type="text/css" href="@Url.Content("~/Content/css/mprogress.min.css")">

    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @*<script src="@Url.Content("~/scripts/plupload/plupload.full.js")" type="text/javascript"></script>    
    <script src="@Url.Content("~/scripts/plupload/jquery.plupload.queue/jquery.plupload.queue.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/ww.jquery.min.js")" type="text/javascript"></script>    
<script src="@Url.Content("~/Scripts/mprogress.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/feather.js")" type="text/javascript"></script>
    <style>
        #ImageContainer img {
            margin: 10px;
            vertical-align: top;
            height: 165px;
            border-radius: 5px;
            -webkit-box-shadow: 2px 2px 4px #535353;
            box-shadow: 2px 2px 4px #535353;
        }
        
    </style>
    <script type="text/javascript">
    /* jQuery Validation with Tabs*/

    //Make sure the validator works for hidden fields
        $.validator.setDefaults({ ignore: '' });
        function GotoTab(tabId) {
            //Reset active class for nav and display tab block contents
            $(".tabs-nav").children().removeClass("active");
            $("#tabnav" + tabId).addClass("active");

            $(".tabs-container").children().css("display", "none");
            $("#tab" + tabId).css("display", "block");
        }

        var showErrorClicks = 0;
        function ShowErrorClicks() {
            if (showErrorClicks == parseInt(@System.Web.Configuration.WebConfigurationManager.AppSettings["ShowValidationSummaryClicks"])) {
                $('#validationSummary').toggle();
            }
            else {
                showErrorClicks += 1;
            }
        }
    var latestEditedImageId = "";
    var featherEditor = new Aviary.Feather({
        apiKey: '@System.Web.Configuration.WebConfigurationManager.AppSettings["AviaryApiKey"]',
        onSave: function (imageID, newURL) {
            debugger;
            $.post('/event/saveUpdatedImage', { url: newURL, imageId: imageID })
            latestEditedImageId = imageID;
        },
        onClose: function (isDirty) {
            if (isDirty)
                latestEditedImageId = "";
            else {
                debugger;
                if (latestEditedImageId.length > 0) {
                    var res = latestEditedImageId.split("_");
                    if (res.length > 1) {
                        var folderPathIdentifier = res[0];
                        var fileName = res[1];
                        var folderPath = "";
                        switch (folderPathIdentifier) {
                            case "t":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.TempImagePathPartial";
                                break;
                            case "e":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.EventImagePathPartial";
                                break;
                            case "s":
                                folderPath = "@SupperClub.Code.ServerMethods.ServerUrl" + "@SupperClub.Code.ServerMethods.SupperClubImagePathPartial";
                                break;
                        }
                        if (folderPath.length > 0) {
                            localFileDest = folderPath + fileName;
                            var img = document.getElementById('dis_' + fileName);
                            img.src = localFileDest + "?" + +new Date().getTime();
                        }
                    }
                }
            }
        },
        onError: function (errorObj) {
            alert(errorObj.message);
        }
    });

    function launchEditor(id, src) {
        debugger;
        featherEditor.launch({
            image: id,
            url: src,
            cropPresets: [
                'Custom',
                'Original',
                ['Square', '1:1'],
                '3:2', '5:3', '4:3', '5:4', '6:4', '7:5', '10:8', '16:9'
            ],
            cropPresetsStrict: true,
            forceCropPreset: ['', '1:1'],
            forceCropMessage: 'Images need to be square'
        });
        return false;
    }
    //Move to a tab with any invalid fields
    $(document).ready(function () {

        $('#divImgEdit').hide();
        $("#RegisterSupperClubForm").submit(function () {
            $("#btnSubmitProfile").prop("disabled", true);
            $("#btnSubmitProfile").text("Your request is being processed. Please wait...");
            $("#RegisterSupperClubForm").validate();
            //Get any tab with errors
            var tabWithError = $("#RegisterSupperClubForm .input-validation-error").closest(".tab-content");
            if (tabWithError.length > 0) {
                var tabName = tabWithError.get(0).id;
                tabSelect = tabName.substring(3);
                GotoTab(tabSelect);
                $("#btnSubmitProfile").prop("disabled", false);
                $("#btnSubmitProfile").text("Create my Grub Club");
            }
        });

        // Delete Images
        $('body').on('click', 'a.btnDeleteImage', function (e) {
            debugger;
            var tempScrollTop = $(window).scrollTop();
            var imagePaths = $("#ImagePaths").val();
            var imageToRemove = $(this).closest('tr').children('td.ImgId').text();
            if (imagePaths.length > 0 && imagePaths.indexOf(imageToRemove) != -1) {
                imagePaths = imagePaths.replace("," + imageToRemove, "");
                imagePaths = imagePaths.replace(imageToRemove + ",", "");
                imagePaths = imagePaths.replace(imageToRemove, "");
            }
            $("#ImagePaths").val(imagePaths);
            $(this).closest("tr").remove();
            $(window).scrollTop(tempScrollTop);
            e.preventDefault();
            return false;
        });

        var mp3 = new Mprogress({
            template: 3,
            parent: '#demoIn'
        });
        $('#btnImgUpload').click(function (e) {
            e.preventDefault();
            var files = $("#avatar").prop("files");
            var totalRequestSize = 0;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var form_data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        form_data.append("file" + x, files[x]);
                        totalRequestSize += files[x].size;
                    }
                    if (totalRequestSize > 1024 * 1024 * 7) {
                        alert("Total file size exceeded 7MB. Please select fewer files and continue.");
                        return false;
                    }
                    else {
                        mp3.start();
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("SaveUploadedFile", "Event")',
                            dataType: 'json',
                            data: form_data,
                            processData: false,
                            contentType: false,
                            success: function (data, textStatus, request) {
                                debugger;
                                var imageUrl = data.Message;
                                var imagePath = $("#ImagePaths").val();
                                var secondUpload = false;
                                if (imagePath.length > 0) {
                                    imagePath = imagePath + "," + imageUrl;
                                    secondUpload = true;
                                }
                                else if (imagePath.length == 0)
                                    imagePath = imageUrl;
                                $("#ImagePaths").val(imagePath);
                                //logic to render thumbnail and edit button
                                var res = imageUrl.split(",");
                                for (var i = 0; i < res.length; i++) {
                                    var imageFullUrl = "@SupperClub.Code.ServerMethods.ServerUrl" + "Content/Images/tempImages/" + res[i];
                                    var newRow = $("<tr>");
                                    var cols = "";
                                    var _imgId = res[i];
                                    cols += '<td style="display:none;" class="ImgId">' + _imgId + '</td>';
                                    cols += '<td style="display:none;"><img src="' + imageFullUrl + '" id="t_' + _imgId + '" /></td>';
                                    cols += '<td style="padding:20px;"><img src="' + imageFullUrl + '" alt="@Model.Name" style="width:240px;" id="dis_' + _imgId + '" /></td>';
                                    cols += '<td><a class="btnEditImage" onclick="return launchEditor(\'t_' + _imgId + '\',\'' + imageFullUrl + '\');">Edit your picture</a></td>';
                                    cols += '<td><a class="btnDeleteImage" href="#">Delete</a></td>';
                                    if (i == 0 && !secondUpload) {
                                        cols += '<td style="width:310px;">' +
                                            '<div style="color:red;font-weight:bold;text-align:left;">To ensure pictures look great on the site,' +
                                            '<ul class="links-list-red"> <li> Press "Edit your picture"</li><li>Select "Crop"</li><li>Select the "Square" option to crop your image to the correct size.</li><li>Click "Apply" and then</li><li>Click on "Save"</li></ul></div></td></tr>';
                                    }
                                    else {
                                        cols += '<td></td></tr>';
                                    }
                                    newRow.append(cols);
                                    $("#tblImgList").append(newRow);
                                }
                                $('#divImgEdit').show();
                                mp3.end(true);
                            },
                            error: function (request, textStatus, errorThrown) {
                                alert("error:" + errorThrown);
                            }
                        });
                        e.preventDefault();
                    }
                }
                else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });
        var a = $("#Summary")[0].textLength;

        $("#summaryLength").text(a);

        $("#Summary").keyup(function () {

            var a = $("#Summary")[0].textLength;

            $("#summaryLength").text(a);

        });
    });   

</script>

}
<!--  Page Title -->
<div class="container pattern-design2">
    <div class="container">
        <p>@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() / @ViewBag.Title</p>
    </div>	
</div>
<!-- Page Title End -->
@if (ViewBag.Notification != null || TempData["Notification"] != null)
{
    SupperClub.Models.NotificationModel nModel = (ViewBag.Notification == null) ? (SupperClub.Models.NotificationModel)TempData["Notification"] : (SupperClub.Models.NotificationModel)ViewBag.Notification;
    TempData["Notification"] = null;
    @Html.Partial("_Notification", nModel);
}
@if (ViewBag.HideMainContainer == null || ViewBag.HideMainContainer == false)
{
    <!-- 960 Container Start -->
    <div class="container">
        @using (Html.BeginForm("RegisterSupperClub", "Host", FormMethod.Post, new { id = "RegisterSupperClubForm", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.ImagePath)
            @Html.HiddenFor(m => m.DateCreated)
            <div class="sixteen columns">
                <!-- Hidden Validation Summary --->
                <div id="validationSummary" style="display:none">
                    @Html.ValidationSummary()
                    <br />
                </div>

                <!-- Tabs Navigation -->
                <ul class="tabs-nav">
                    <li class="active" id="tabnav1"><a href="#tab1">Details</a></li>
                    <li id="tabnav2"><a href="#tab2">Address</a></li>
                    <li id="tabnav3"><a href="#tab3">Social</a></li>
                    <li id="tabnav4"><a href="#tab4">Banking</a></li>
                    <li id="tabnav5"><a href="#tab5">Misc</a></li>
                    <li id="tabnav6"><a href="#tab6">Picture</a></li>
                    <li id="tabnav7"><a href="#tab7" onclick="ShowErrorClicks();">Register</a></li>
                </ul>
                <!-- Tabs Content -->
                <div class="tabs-container">
                    <div class="tab-content" id="tab1">

                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(2)"><i class="icon-chevron-right"></i>Next</a>

                        <p>Please review all the tabs and ensure you have all your information ready in advance, before creating your Grub Club. You cannot save in progress (yet!)</p>

                        <div class="label">
                            @Html.LabelFor(m => m.Name)
                            @Html.ValidationMessageFor(m => m.Name)
                            <p>The name of your grub club - this is the name that relates to you as a host and what you represent; not the description of a specific event you are planning (you will add this later). E.g. "Maria and Jose's Spanish nights" or "The book devourer"</p>
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Name)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Summary)
                            @Html.ValidationMessageFor(m => m.Summary)
                            <p>This is about you as a host/chef. What inspired you to host, your experience in cooking/hosting, any future plans, etc. What is it that you want people to know about you and that will entice people to book themselves into your events and will make it different to others.</p>
                            <p>Limited to 500 character (inc. spaces) - this is the brief description that will show on your profile</p>
                        </div>
                        <div class="field">
                            @Html.TextAreaFor(m => m.Summary, new { maxlength = "500" })
                            <span id="summaryLength"></span>
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Description)
                            @Html.ValidationMessageFor(m => m.Description)
                            <p>This is where you describe what your Grub Clubs are about. For example, film/art themes, focus on a culture, just making new friends, meeting neighbours, etc.</p>
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Description)
                        </div>

                        @*<div class="label">
                            @Html.LabelFor(m => m.HouseRule)
                            @Html.ValidationMessageFor(m => m.HouseRule)
                            <p>Anything you would particularly like to mention about rules in your home/space. Eg no smoking/smoking in the back garden, noise levels, respect cleanliness/space as it's your home, etc.</p>
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.HouseRule)
                        </div>*@

                    </div>

                    <div class="tab-content" id="tab2">

                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(3)"><i class="icon-chevron-right"></i>Next</a>

                        <div class="label">
                            @Html.LabelFor(m => m.ContactNumber)
                            @Html.ValidationMessageFor(m => m.ContactNumber)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.ContactNumber)
                        </div>

                        <div class="label">
                            @Html.LabelFor(m => m.Address)
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Address)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Address2)
                            @Html.ValidationMessageFor(m => m.Address2)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Address2)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.City)
                            @Html.ValidationMessageFor(m => m.City)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.City)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Country)
                            @Html.ValidationMessageFor(m => m.Country)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Country)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.PostCode)
                            @Html.ValidationMessageFor(m => m.PostCode)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.PostCode)
                        </div>

                    </div>

                    <div class="tab-content" id="tab3">

                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(4)"><i class="icon-chevron-right"></i>Next</a>

                        <div class="label">
                            @Html.LabelFor(m => m.Blog)
                            @Html.ValidationMessageFor(m => m.Blog)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Blog, "String")
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Twitter)
                            @Html.ValidationMessageFor(m => m.Twitter)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Twitter, "String")
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Facebook)
                            @Html.ValidationMessageFor(m => m.Facebook)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Facebook, "String")
                        </div>
                        <div class="label" style="display:none;">
                            @Html.LabelFor(m => m.Pinterest)
                            @Html.ValidationMessageFor(m => m.Pinterest)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.Instagram)
                            @Html.ValidationMessageFor(m => m.Instagram)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.Instagram, "String")
                        </div>

                    </div>

                    <div class="tab-content" id="tab4">

                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(5)"><i class="icon-chevron-right"></i>Next</a>

                        <p>You can complete your bank details later but don't forget to update them in order to receive your payment after each event.</p>

                        <div class="label">
                            @Html.LabelFor(m => m.TradingName)
                            @Html.ValidationMessageFor(m => m.TradingName)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.TradingName)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.VATNumber)
                            @Html.ValidationMessageFor(m => m.VATNumber)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.VATNumber)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.ChequeName)
                            @Html.ValidationMessageFor(m => m.ChequeName)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.ChequeName)
                        </div>
                        <div class="label">
                            <label>Bank Name or PayPal Merchant Account Name</label>
                            @Html.ValidationMessageFor(m => m.BankName)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.BankName)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.BankAddress)
                            @Html.ValidationMessageFor(m => m.BankAddress)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.BankAddress)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.SortCode)
                            @Html.ValidationMessageFor(m => m.SortCode)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.SortCode)
                        </div>
                        <div class="label">
                            @Html.LabelFor(m => m.AccountNumber)
                            @Html.ValidationMessageFor(m => m.AccountNumber)
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.AccountNumber)
                        </div>

                    </div>

                    <div class="tab-content" id="tab5">

                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(6)"><i class="icon-chevron-right"></i>Next</a>

                        <p>For further information on these requirements please refer to the <a href="@Url.Action("HowToHost", "Home")" target="_blank">Host FAQs</a></p>
                        <br />
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.CouncilRegistered)
                            @Html.LabelFor(m => m.CouncilRegistered)
                            @Html.ValidationMessageFor(m => m.CouncilRegistered)
                        </div>
                        <br />
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.FoodHygieneCertificate)
                            @Html.LabelFor(m => m.FoodHygieneCertificate)
                            @Html.ValidationMessageFor(m => m.FoodHygieneCertificate)
                        </div>
                        @*<br />
                        <div class="label">
                            @Html.LabelFor(m => m.)
                            
                        </div>
                        <div class="field">
                            @Html.EditorFor(m => m.)
                        </div>*@
                        <br />
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.IndemnityInsurace)
                            @Html.LabelFor(m => m.IndemnityInsurace)
                            @Html.ValidationMessageFor(m => m.IndemnityInsurace)
                        </div>
                        <br />
                        <div class="editor field check-box-field">
                            @Html.EditorFor(m => m.AlcoholLicense)
                            @Html.LabelFor(m => m.AlcoholLicense)
                            @Html.ValidationMessageFor(m => m.AlcoholLicense)
                        </div>

                    </div>

                    <div class="tab-content" id="tab6">
                        
                        <a href="#" class="button medium yellow button-next" style="float:right" onclick="GotoTab(7)"><i class="icon-chevron-right"></i>Next</a>
                        
                        <p>You are strongly recommended to upload pictures to give your guests a feel for your Grub Club. This could be a picture of the type of food you plan to cook, a picture of the venue, a picture of you cooking. Anything to give a personal touch so guests can visualise your Grub Club in some way.</p>

                        <p>Don't worry, you can change images and some of the details of the event after submitting it.</p>

                        <p>Total size of the pictures being uploaded should not exceed 7MB at once. You can always add more pictures to your Grub Club after creating it!</p>

                        @Html.HiddenFor(m => m.ImagePaths, new{data_files="true"})
                        <h3>Step 1: Select the pictures</h3>
                        <input id="avatar" type="file" name="avatar" multiple style="margin-bottom:10px;" />
                        <br />
                        
                        <h3>Step 2: Upload your pictures</h3>
                        <button id="btnImgUpload" class="button medium orange" value="Upload">Upload</button>
                        <div id="demoIn" class="demo-bar"></div>

                        <div id="divImgEdit" style="float:left;">
                            <h3>Step 3: Edit your pictures</h3>
                            <table id="tblImgList" class="tblImgList-table">
                                <thead style="">
                                    <tr>
                                        <th style="display:none;">ImageId</th>
                                        <th style="display:none;">ImageFull</th>
                                        <th>Image</th>
                                        <th>Action</th>
                                        <th>Delete</th>
                                        <th>Note</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>                        
                    </div>

                    <div class="tab-content" id="tab7">                        
                        <p>Thanks for registering your Grub Club. As soon as we've reviewed it, you'll be able to view your future events online.</p>
                        <p>Don't forget to submit all the details of your Grub Club that you know. You MUST press "Create my Grub Club" in order to submit all the information and then you can start creating your first event.</p>
                        <input type="submit" id="btnSubmitProfile" value="Create my Grub Club" class="button medium orange" style="" />
                    </div>
                </div>                
            </div>
        }
    </div>
}