//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations.Schema;

namespace SupperClub.Domain 
{
    public class EventAttendee
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int EventId
        {
            get { return _eventId; }
            set
            {
                if (_eventId != value)
                {
                    if (Event != null && Event.Id != value)
                    {
                        Event = null;
                    }
                    _eventId = value;
                }
            }
        }
        private int _eventId;
    
        public virtual System.Guid UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (User != null && User.Id != value)
                    {
                        User = null;
                    }
                    _userId = value;
                }
            }
        }
        private System.Guid _userId;

        public int SeatingId { get; set; }
        [ForeignKey("SeatingId")]
        public virtual EventSeating EventSeating { get; set; }

        public int MenuOptionId { get; set; }
        [ForeignKey("MenuOptionId")]
        public virtual EventMenuOption EventMenuOption { get; set; }

        public virtual Nullable<decimal> TotalBasePrice
        {
            get;
            set;
        }

        public virtual Nullable<decimal> TotalPrice
        {
            get;
            set;
        }
        public virtual Nullable<decimal> HostNetPrice
        {
            get;
            set;
        }
        public virtual Nullable<decimal> GuestBasePrice
        {
            get;
            set;
        }
        public virtual Nullable<decimal> Discount
        {
            get;
            set;
        }
        public virtual Nullable<bool> AdminVoucherCode
        {
            get;
            set;
        }
        public virtual Nullable<int> VoucherId
        {
            get;
            set;
        }
        public virtual Nullable<Guid> BasketId
        {
            get;
            set;
        }
        public virtual Nullable<DateTime> BookingDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> EventRanking
        {
            get;
            set;
        }
    
        public virtual Nullable<int> UserRanking
        {
            get;
            set;
        }
    
        public virtual string UserComment
        {
            get;
            set;
        }

        public virtual int NumberOfGuests
        {
            get;
            set;
        }
        #endregion

        #region Navigation Properties
    
        public virtual Event Event
        {
            get { return _event; }
            set
            {
                if (!ReferenceEquals(_event, value))
                {
                    var previousValue = _event;
                    _event = value;
                    FixupEvent(previousValue);
                }
            }
        }
        private Event _event;
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;       
        #endregion

        #region Association Fixup    
        private void FixupEvent(Event previousValue)
        {
            if (previousValue != null && previousValue.EventAttendees.Contains(this))
            {
                previousValue.EventAttendees.Remove(this);
            }
    
            if (Event != null)
            {
                if (!Event.EventAttendees.Contains(this))
                {
                    Event.EventAttendees.Add(this);
                }
                if (EventId != Event.Id)
                {
                    EventId = Event.Id;
                }
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.EventAttendees.Contains(this))
            {
                previousValue.EventAttendees.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.EventAttendees.Contains(this))
                {
                    User.EventAttendees.Add(this);
                }
                if (UserId != User.Id)
                {
                    UserId = User.Id;
                }
            }
        }        
        #endregion
    }
}
