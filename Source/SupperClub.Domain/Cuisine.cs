//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace SupperClub.Domain
{
    public class Cuisine
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }

        [Display(Name = "Cuisine")]
        public virtual string Name
        {
            get;
            set;
        }

        public virtual bool Active
        {
            get;
            set;
        }
        public virtual int? TagId
        {
            get;
            set;
        }        
        #endregion
        #region Navigation Properties
    
        public virtual ICollection<EventCuisine> EventCuisines
        {
            get
            {
                if (_eventCuisines == null)
                {
                    var newCollection = new FixupCollection<EventCuisine>();
                    newCollection.CollectionChanged += FixupEventCuisines;
                    _eventCuisines = newCollection;
                }
                return _eventCuisines;
            }
            set
            {
                if (!ReferenceEquals(_eventCuisines, value))
                {
                    var previousValue = _eventCuisines as FixupCollection<EventCuisine>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEventCuisines;
                    }
                    _eventCuisines = value;
                    var newValue = value as FixupCollection<EventCuisine>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEventCuisines;
                    }
                }
            }
        }
        private ICollection<EventCuisine> _eventCuisines;

        #endregion
        #region Association Fixup
    
        private void FixupEventCuisines(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EventCuisine item in e.NewItems)
                {
                    item.Cuisine = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EventCuisine item in e.OldItems)
                {
                    if (ReferenceEquals(item.Cuisine, this))
                    {
                        item.Cuisine = null;
                    }
                }
            }
        }

        #endregion
    }
}
